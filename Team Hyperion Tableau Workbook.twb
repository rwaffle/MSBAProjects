<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='County Data (Hyperion County Data)' inline='true' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Hyperion County Data' name='excel-direct.04iy97y1sick0115alil60oirz7q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/elffa/Downloads/Hyperion County Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.04iy97y1sick0115alil60oirz7q' name='County Data' table='[&apos;County Data$&apos;]' type='table'>
          <columns gridOrigin='A1:W10001:no:A1:W2147483647:0' header='yes' outcome='6'>
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='string' name='Lookup ID' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='County' ordinal='3' />
            <column datatype='integer' name='Total Business' ordinal='4' />
            <column datatype='integer' name='Total Wages' ordinal='5' />
            <column datatype='integer' name='Average Annual Pay' ordinal='6' />
            <column datatype='real' name='Wage Quotient' ordinal='7' />
            <column datatype='integer' name='Poverty Estimate All Ages' ordinal='8' />
            <column datatype='real' name='Poverty Percent All Ages' ordinal='9' />
            <column datatype='integer' name='Poverty Estimate Under Age 18' ordinal='10' />
            <column datatype='real' name='Poverty Percent Under Age 18' ordinal='11' />
            <column datatype='integer' name='Median Household Income' ordinal='12' />
            <column datatype='integer' name='PopEstimate' ordinal='13' />
            <column datatype='integer' name='Births' ordinal='14' />
            <column datatype='integer' name='Deaths' ordinal='15' />
            <column datatype='integer' name='NetMigration' ordinal='16' />
            <column datatype='integer' name='Force' ordinal='17' />
            <column datatype='integer' name='Employed' ordinal='18' />
            <column datatype='integer' name='Unemployed' ordinal='19' />
            <column datatype='real' name='(%)' ordinal='20' />
            <column datatype='integer' name='Number Insured' ordinal='21' />
            <column datatype='integer' name='Number Uninsured' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[County Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W10001:no:A1:W2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lookup ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Lookup ID]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Lookup ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Business</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Business]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Total Business</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Wages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Wages]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Total Wages</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Annual Pay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average Annual Pay]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Average Annual Pay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wage Quotient</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wage Quotient]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Wage Quotient</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty Estimate All Ages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Poverty Estimate All Ages]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Poverty Estimate All Ages</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty Percent All Ages</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Poverty Percent All Ages]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Poverty Percent All Ages</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty Estimate Under Age 18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Poverty Estimate Under Age 18]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Poverty Estimate Under Age 18</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty Percent Under Age 18</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Poverty Percent Under Age 18]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Poverty Percent Under Age 18</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Household Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median Household Income]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Median Household Income</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PopEstimate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PopEstimate]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>PopEstimate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Births</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Births]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Births</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NetMigration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NetMigration]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>NetMigration</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Force</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Force]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Force</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Employed]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Employed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unemployed]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Unemployed</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[(%)]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>(%)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Insured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Insured]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Number Insured</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Uninsured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Uninsured]</local-name>
            <parent-name>[County Data]</parent-name>
            <remote-alias>Number Uninsured</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unemployment Rate' datatype='real' name='[(%)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Average Annual Pay]' role='measure' type='quantitative' />
      <column caption='Unins Rate' datatype='real' name='[Calculation_1000080637227728898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Number Uninsured]) / sum([PopEstimate])' />
      </column>
      <column caption='Wealth' datatype='real' name='[Calculation_1174032172397645824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Median Household Income] * [Wage Quotient]' />
      </column>
      <column caption='Unemp * Poverty' datatype='real' name='[Calculation_1174032172405035012]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Poverty Percent All Ages] * [(%)] / 1000' />
      </column>
      <column caption='Uninsured Rate' datatype='real' name='[Calculation_1174032172449542149]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number Uninsured] / [PopEstimate]' />
      </column>
      <column caption='Birth Rate' datatype='real' name='[Calculation_1174032172449832966]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Births] / [PopEstimate] *1000' />
      </column>
      <column caption='Death Rate' datatype='real' name='[Calculation_1174032172449996807]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Deaths] / [PopEstimate] *1000' />
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Net Migration' datatype='integer' name='[NetMigration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Pop Estimate' datatype='integer' name='[PopEstimate]' role='measure' type='quantitative' />
      <column datatype='real' name='[Poverty Percent All Ages]' role='measure' type='quantitative' />
      <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State]' default='&quot;Midwest&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska &amp; Hawaii&quot;'>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Hawaii&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East Coast&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Gulf Coast&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Texas&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Rocky Mountain&quot;'>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West Coast&quot;'>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Washington&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Total Business]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[(%)]' derivation='Avg' name='[avg:(%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NetMigration]' derivation='Avg' name='[avg:NetMigration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Poverty Percent All Ages]' derivation='Avg' name='[avg:Poverty Percent All Ages:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Count' name='[cnt:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Business]' derivation='Sum' name='[diff:sum:Total Business:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Total Business]' derivation='Sum' name='[diff:sum:Total Business:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]' />
          <sort direction='ASC' using='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:Average Annual Pay:qk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Total Business]' derivation='Sum' name='[diff:sum:Total Business:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]' />
          <sort direction='ASC' using='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[cnt:Year:qk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Total Business]' derivation='Sum' name='[diff:sum:Total Business:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total Business]' derivation='Sum' name='[pcdf:sum:Total Business:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Total Business]' derivation='Sum' name='[pcdf:sum:Total Business:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Total Business]' derivation='Sum' name='[pcdf:sum:Total Business:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Total Business]' derivation='Sum' name='[pcdf:sum:Total Business:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State]' />
          <sort direction='ASC' using='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:Average Annual Pay:qk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Total Business]' derivation='Sum' name='[pcdf:sum:Total Business:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State]' />
          <sort direction='ASC' using='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[cnt:Year:qk]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Total Business]' derivation='Sum' name='[pcdf:sum:Total Business:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Average Annual Pay]' derivation='Sum' name='[sum:Average Annual Pay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NetMigration]' derivation='Sum' name='[sum:NetMigration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Business]' derivation='Sum' name='[sum:Total Business:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='State, County'>
          <field>[State]</field>
          <field>[County]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.211331' measure-ordering='alphabetic' measure-percentage='0.788669' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State (group)]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alaska &amp; Hawaii&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Coast&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Rocky Mountain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gulf Coast&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Midwest&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Coast&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Crop_Damage:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Poverty Percent All Ages:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229600773:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229547524:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:(\%):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:NetMigration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]:2&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[diff:sum:Total Business:qk:1]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[diff:sum:Total Business:qk:2]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[diff:sum:Total Business:qk:3]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[diff:sum:Total Business:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[pcdf:sum:Total Business:qk:2]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[pcdf:sum:Total Business:qk:3]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[pcdf:sum:Total Business:qk:4]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[pcdf:sum:Total Business:qk:5]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[pcdf:sum:Total Business:qk:6]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[pcdf:sum:Total Business:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:Total Business:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
        <column caption='Direct Casualties' datatype='integer' name='[Calculation_1000080637229547524]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect]' />
        </column>
        <column caption='Indirect Casualties' datatype='integer' name='[Calculation_1000080637229600773]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='[Deaths_Indirect] + [Injuries_Indirect]' />
        </column>
        <column caption='Total Damage' datatype='real' datatype-customized='true' default-format='C1033%' name='[Calculation_1200490820187131904]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='FLOAT([Crop_Damage] + [Property_Damage])' />
        </column>
        <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
        </column>
        <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
          <calculation class='tableau' formula='1' />
        </column>
        <column-instance column='[Calculation_1000080637229547524]' derivation='Sum' name='[sum:Calculation_1000080637229547524:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_1000080637229600773]' derivation='Sum' name='[sum:Calculation_1000080637229600773:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_1200490820187131904]' derivation='Sum' name='[sum:Calculation_1200490820187131904:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Crop_Damage]' derivation='Sum' name='[sum:Crop_Damage:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Storm Data (Hyperion Storm Data)' inline='true' name='federated.0noyncg050tm1e14la92z161fwhs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Hyperion Storm Data' name='excel-direct.1k9lb261z0ysih1aypp1213ctnyh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/elffa/Downloads/Hyperion Storm Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1k9lb261z0ysih1aypp1213ctnyh' name='Storm Data' table='[&apos;Storm Data$&apos;]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M2147483647:0' header='yes' outcome='6'>
            <column datatype='integer' name='Event_ID' ordinal='0' />
            <column datatype='string' name='Lookup ID' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='string' name='Month' ordinal='3' />
            <column datatype='string' name='State_Name' ordinal='4' />
            <column datatype='string' name='County_Name' ordinal='5' />
            <column datatype='string' name='Event_Type' ordinal='6' />
            <column datatype='integer' name='Injuries_Direct' ordinal='7' />
            <column datatype='integer' name='Injuries_Indirect' ordinal='8' />
            <column datatype='integer' name='Deaths_Direct' ordinal='9' />
            <column datatype='integer' name='Deaths_Indirect' ordinal='10' />
            <column datatype='integer' name='Property_Damage' ordinal='11' />
            <column datatype='real' name='Crop_Damage' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Event_ID]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Event_ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lookup ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Lookup ID]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Lookup ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State_Name]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>State_Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County_Name]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>County_Name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Event_Type]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Event_Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Injuries_Direct</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Injuries_Direct]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Injuries_Direct</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Injuries_Indirect</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Injuries_Indirect]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Injuries_Indirect</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths_Direct</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths_Direct]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Deaths_Direct</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths_Indirect</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths_Indirect]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Deaths_Indirect</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property_Damage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Property_Damage]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Property_Damage</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crop_Damage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crop_Damage]</local-name>
            <parent-name>[Storm Data]</parent-name>
            <remote-alias>Crop_Damage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Number of Records:qk]&quot;' value='Total Weather Events' />
        </aliases>
      </column>
      <column caption='Direct Casualties' datatype='integer' name='[Calculation_1000080637229547524]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect]' />
      </column>
      <column caption='Indirect Casualties' datatype='integer' name='[Calculation_1000080637229600773]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Deaths_Indirect] + [Injuries_Indirect]' />
      </column>
      <column caption='Damage per Event' datatype='real' name='[Calculation_1174032172397961218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_1200490820187131904]) / count([Event_ID])' />
      </column>
      <column caption='Casualties per Event' datatype='real' name='[Calculation_1174032172399677443]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_1200490820189949953]) / Count([Event_ID])' />
      </column>
      <column caption='Total Damage' datatype='real' datatype-customized='true' default-format='C1033%' name='[Calculation_1200490820187131904]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([Crop_Damage] + [Property_Damage])' />
      </column>
      <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
      </column>
      <column caption='County Name' datatype='string' name='[County_Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths Direct (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Deaths_Direct]' peg='0' size='15.6' />
      </column>
      <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
      <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
      <column caption='Event ID' datatype='integer' name='[Event_ID]' role='dimension' type='ordinal' />
      <column caption='Event Type' datatype='string' name='[Event_Type]' role='dimension' type='nominal' />
      <column caption='Injuries Direct' datatype='integer' name='[Injuries_Direct]' role='measure' type='quantitative' />
      <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Number of Records]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Property Damage' datatype='integer' name='[Property_Damage]' role='measure' type='quantitative' />
      <column caption='State Name' datatype='string' name='[State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Total Casualties (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Calculation_1200490820189949953]' peg='0' size='76' />
      </column>
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Event_Type]' derivation='None' name='[none:Event_Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[pcto:sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1000080637229547524]' derivation='Sum' name='[sum:Calculation_1000080637229547524:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1000080637229600773]' derivation='Sum' name='[sum:Calculation_1000080637229600773:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1200490820187131904]' derivation='Sum' name='[sum:Calculation_1200490820187131904:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='State_Name, County_Name'>
          <field>[State_Name]</field>
          <field>[County_Name]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.46223' measure-ordering='alphabetic' measure-percentage='0.53777' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229600773:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229547524:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[pcto:sum:Calculation_1200490820189949953:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Event_Type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Drought&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lakeshore Flood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Astronomical Low Tide&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Heavy Rain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tropical Storm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cold/Wind Chill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hurricane&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Winter Weather&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Extreme Cold/Wind Chill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seiche&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dust Devil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Landslide&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Debris Flow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hurricane (Typhoon)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hail&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tornado&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Avalanche&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Heavy Snow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tsunami&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frost/Freeze&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Strong Wind&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dense Fog&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ice Storm&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flash Flood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sleet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sneakerwave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Funnel Cloud&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thunderstorm Wind&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Heat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tropical Depression&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dust Storm&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lightning&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dense Smoke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lake-Effect Snow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blizzard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;High Surf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wildfire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Freezing Fog&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Storm Surge/Tide&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Excessive Heat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rip Current&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coastal Flood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;High Wind&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Winter Storm&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#f28e2b'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Sheet1 (correlation data)' inline='true' name='federated.0cg3ox00njvrhr1frgtae1f6z4ag' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='correlation data' name='excel-direct.07ftqrz1n42r3z1b0228y0h114vl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/elffa/Downloads/Hyperion Correlation Matrix Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.07ftqrz1n42r3z1b0228y0h114vl' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:S19:no:A1:S19:0' header='yes' outcome='2'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='Labor_Force' ordinal='1' />
            <column datatype='real' name='Number_Employed' ordinal='2' />
            <column datatype='real' name='Number_Unemployed' ordinal='3' />
            <column datatype='real' name='Unemployment_Rate' ordinal='4' />
            <column datatype='real' name='Total Businesses' ordinal='5' />
            <column datatype='real' name='Annual_Total_Wages' ordinal='6' />
            <column datatype='real' name='Annual_Average_Pay' ordinal='7' />
            <column datatype='real' name='Wage_Quotient_Relative_to_US_Average' ordinal='8' />
            <column datatype='real' name='Number_Uninsured' ordinal='9' />
            <column datatype='real' name='Number_Insured' ordinal='10' />
            <column datatype='real' name='Poverty_Estimate_All_Ages' ordinal='11' />
            <column datatype='real' name='Poverty_Percent_All_Ages' ordinal='12' />
            <column datatype='real' name='Poverty Estimate_Age_0-17' ordinal='13' />
            <column datatype='real' name='Poverty_Percent_Age_0-17' ordinal='14' />
            <column datatype='real' name='Median_Household_Income' ordinal='15' />
            <column datatype='real' name='Population_Estimate' ordinal='16' />
            <column datatype='real' name='Population_Change' ordinal='17' />
            <column datatype='real' name='Net_Migration' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Labor_Force</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Labor_Force]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Labor_Force</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Employed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number_Employed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number_Employed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Unemployed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number_Unemployed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number_Unemployed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment_Rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unemployment_Rate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Businesses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Businesses]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total Businesses</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual_Total_Wages</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual_Total_Wages]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Annual_Total_Wages</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual_Average_Pay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual_Average_Pay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Annual_Average_Pay</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wage_Quotient_Relative_to_US_Average</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wage_Quotient_Relative_to_US_Average]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Wage_Quotient_Relative_to_US_Average</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Uninsured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number_Uninsured]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number_Uninsured</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Insured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number_Insured]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Number_Insured</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty_Estimate_All_Ages</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Poverty_Estimate_All_Ages]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Poverty_Estimate_All_Ages</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty_Percent_All_Ages</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Poverty_Percent_All_Ages]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Poverty_Percent_All_Ages</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty Estimate_Age_0-17</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Poverty Estimate_Age_0-17]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Poverty Estimate_Age_0-17</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty_Percent_Age_0-17</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Poverty_Percent_Age_0-17]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Poverty_Percent_Age_0-17</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Household_Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median_Household_Income]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Median_Household_Income</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Estimate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population_Estimate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population_Estimate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population_Change]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population_Change</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net_Migration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net_Migration]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Net_Migration</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S19:no:A1:S19:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Annual Average Pay' datatype='real' name='[Annual_Average_Pay]' role='measure' type='quantitative' />
      <column caption='Annual Total Wages' datatype='real' name='[Annual_Total_Wages]' role='measure' type='quantitative' />
      <column caption='Variables' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='Labor Force' datatype='real' name='[Labor_Force]' role='measure' type='quantitative' />
      <column caption='Median Household Income' datatype='real' name='[Median_Household_Income]' role='measure' type='quantitative' />
      <column caption='Net Migration' datatype='real' name='[Net_Migration]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Number Employed' datatype='real' name='[Number_Employed]' role='measure' type='quantitative' />
      <column caption='Number Insured' datatype='real' name='[Number_Insured]' role='measure' type='quantitative' />
      <column caption='Number Unemployed' datatype='real' name='[Number_Unemployed]' role='measure' type='quantitative' />
      <column caption='Number Uninsured' datatype='real' name='[Number_Uninsured]' role='measure' type='quantitative' />
      <column caption='Population Change' datatype='real' name='[Population_Change]' role='measure' type='quantitative' />
      <column caption='Population Estimate' datatype='real' name='[Population_Estimate]' role='measure' type='quantitative' />
      <column caption='Poverty Estimate Age 0-17' datatype='real' name='[Poverty Estimate_Age_0-17]' role='measure' type='quantitative' />
      <column caption='Poverty Estimate All Ages' datatype='real' name='[Poverty_Estimate_All_Ages]' role='measure' type='quantitative' />
      <column caption='Poverty Percent Age 0-17' datatype='real' name='[Poverty_Percent_Age_0-17]' role='measure' type='quantitative' />
      <column caption='Poverty Percent All Ages' datatype='real' name='[Poverty_Percent_All_Ages]' role='measure' type='quantitative' />
      <column caption='Unemployment Rate' datatype='real' name='[Unemployment_Rate]' role='measure' type='quantitative' />
      <column caption='Wage Quotient Relative to US Average' datatype='real' name='[Wage_Quotient_Relative_to_US_Average]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.330036' measure-ordering='alphabetic' measure-percentage='0.669964' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Average Median Household Income by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
          </datasources>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Median Household Income]' derivation='Avg' name='[avg:Median Household Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Median Household Income:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Median Household Income:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Median Household Income:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</rows>
        <cols>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Median Household Income:qk]</cols>
      </table>
      <simple-id uuid='{CF558308-B9E9-4474-B791-324451E6B557}' />
    </worksheet>
    <worksheet name='Bar Chart Event Type vs Net Migration'>
      <table>
        <view>
          <datasources>
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Event Type' datatype='string' name='[Event_Type]' role='dimension' type='nominal' />
            <column-instance column='[Event_Type]' derivation='None' name='[none:Event_Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column caption='Net Migration' datatype='integer' name='[NetMigration]' role='measure' type='quantitative' />
            <column-instance column='[NetMigration]' derivation='Avg' name='[avg:NetMigration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:NetMigration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:NetMigration:qk]</rows>
        <cols>[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]</cols>
        <join-lod-include-overrides>
          <column>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{DCA42542-C743-4E1D-8E90-ABB2A50B64A7}' />
    </worksheet>
    <worksheet name='Business vs Crop Damage'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column-instance column='[Crop_Damage]' derivation='Sum' name='[sum:Crop_Damage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Business]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Business]' derivation='Sum' name='[sum:Total Business:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:Total Business:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Crop_Damage:qk]</rows>
        <cols>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:Total Business:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{B87C30FF-D4E6-4D92-B969-577A19583967}' />
    </worksheet>
    <worksheet name='Casualties per Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
            </column>
            <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
            <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
            <column caption='Injuries Direct' datatype='integer' name='[Injuries_Direct]' role='measure' type='quantitative' />
            <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Midwest&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alaska &amp; Hawaii&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Coast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Gulf Coast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountain&quot;'>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Coast&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]' field-type='quantitative' max='35502849.395197093' min='17451399.184059128' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]' field-type='quantitative' max='11937773.087911693' min='1622658.220425596' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' num-steps='5' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' />
              <text column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]' />
              <geometry column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]</rows>
        <cols>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]</cols>
        <join-lod-include-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{9F98EFF1-8E6C-4540-BB36-9A1B70C1530D}' />
    </worksheet>
    <worksheet name='Damage per Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Damage' datatype='real' datatype-customized='true' default-format='C1033%' name='[Calculation_1200490820187131904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Crop_Damage] + [Property_Damage])' />
            </column>
            <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column caption='Property Damage' datatype='integer' name='[Property_Damage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1200490820187131904]' derivation='Sum' name='[sum:Calculation_1200490820187131904:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Midwest&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alaska &amp; Hawaii&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Coast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Gulf Coast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountain&quot;'>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Coast&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]' field-type='quantitative' max='36507911.824535176' min='18456461.613397211' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]' field-type='quantitative' max='11726180.988065826' min='1411066.1205797293' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' num-steps='5' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' value='SUM(Total Damage)' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' />
              <text column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]' />
              <geometry column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]</rows>
        <cols>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]</cols>
        <join-lod-include-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{CF43702C-F96D-4254-A63B-FCDEB1620253}' />
    </worksheet>
    <worksheet name='Distribution of Damage and Casualties Per Month Boxplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Damage' datatype='real' datatype-customized='true' default-format='C1033%' name='[Calculation_1200490820187131904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Crop_Damage] + [Property_Damage])' />
            </column>
            <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
            </column>
            <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
            <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
            <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
            <column caption='Injuries Direct' datatype='integer' name='[Injuries_Direct]' role='measure' type='quantitative' />
            <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column caption='Property Damage' datatype='integer' name='[Property_Damage]' role='measure' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1200490820187131904]' derivation='Sum' name='[sum:Calculation_1200490820187131904:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='193' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Month:nk]' />
              <lod column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Month:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' z-order='1' />
            <reference-line axis-column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Month:nk]' />
              <lod column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Month:nk]' />
              <lod column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Month:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk] + [federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{D0319D4C-81F5-48AA-A2B4-3D3419BE4BCC}' />
    </worksheet>
    <worksheet name='Dual Combination Plot of Indicators That Influence Population Change Most'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Direct Casualties' datatype='integer' name='[Calculation_1000080637229547524]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect]' />
            </column>
            <column caption='Indirect Casualties' datatype='integer' name='[Calculation_1000080637229600773]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Indirect] + [Injuries_Indirect]' />
            </column>
            <column caption='Total Damage' datatype='real' datatype-customized='true' default-format='C1033%' name='[Calculation_1200490820187131904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Crop_Damage] + [Property_Damage])' />
            </column>
            <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
            <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
            <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
            <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column caption='Property Damage' datatype='integer' name='[Property_Damage]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1000080637229547524]' derivation='Sum' name='[sum:Calculation_1000080637229547524:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1000080637229600773]' derivation='Sum' name='[sum:Calculation_1000080637229600773:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1200490820187131904]' derivation='Sum' name='[sum:Calculation_1200490820187131904:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column caption='Net Migration' datatype='integer' name='[NetMigration]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[NetMigration]' derivation='Sum' name='[sum:NetMigration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229547524:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229600773:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229547524:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229600773:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]' y-index='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk] + ([federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk] + ([federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk] + ([federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229547524:qk] + ([federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk] + [federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1000080637229600773:qk])))))</rows>
        <cols>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[tyr:Year:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Lookup ID]</column>
        </join-lod-include-overrides>
        <join-lod-exclude-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Year]</column>
        </join-lod-exclude-overrides>
      </table>
      <simple-id uuid='{738550E6-F180-4E55-94E2-B8724540F46E}' />
    </worksheet>
    <worksheet name='Dual Combination Plot of Net Migration vs Casualties'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
            </column>
            <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
            <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
            <column caption='Injuries Direct' datatype='integer' name='[Injuries_Direct]' role='measure' type='quantitative' />
            <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column caption='Net Migration' datatype='integer' name='[NetMigration]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[NetMigration]' derivation='Sum' name='[sum:NetMigration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk] * ([federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk] + [federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]))</rows>
        <cols>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[tyr:Year:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{F09EB06B-D9BB-4BEF-91FA-2F33FDF0EF1A}' />
    </worksheet>
    <worksheet name='Dynamic Graph Casualty Prediction'>
      <table>
        <view>
          <datasources>
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Casualties per Event' datatype='real' name='[Calculation_1174032172399677443]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_1200490820189949953]) / Count([Event_ID])' />
            </column>
            <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
            </column>
            <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
            <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
            <column caption='Event ID' datatype='integer' name='[Event_ID]' role='dimension' type='ordinal' />
            <column caption='Injuries Direct' datatype='integer' name='[Injuries_Direct]' role='measure' type='quantitative' />
            <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1174032172399677443]' derivation='User' forecast-column-base='[usr:Calculation_1174032172399677443:qk]' forecast-column-type='forecast-value' name='[fVal:usr:Calculation_1174032172399677443:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1174032172399677443]' derivation='User' name='[usr:Calculation_1174032172399677443:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0noyncg050tm1e14la92z161fwhs].[yr:Year:ok]'>
            <groupfilter from='2010' function='range' level='[yr:Year:ok]' to='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0noyncg050tm1e14la92z161fwhs].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Forecast Indicator:nk]' />
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[fVal:usr:Calculation_1174032172399677443:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0noyncg050tm1e14la92z161fwhs].[fVal:usr:Calculation_1174032172399677443:qk]</rows>
        <cols>[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{EA40E028-147A-4717-9ABF-6352FC8A59DC}' />
    </worksheet>
    <worksheet name='Figure 21 - Correlation Matrix'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (correlation data)' name='federated.0cg3ox00njvrhr1frgtae1f6z4ag' />
          </datasources>
          <datasource-dependencies datasource='federated.0cg3ox00njvrhr1frgtae1f6z4ag'>
            <column caption='Annual Average Pay' datatype='real' name='[Annual_Average_Pay]' role='measure' type='quantitative' />
            <column caption='Annual Total Wages' datatype='real' name='[Annual_Total_Wages]' role='measure' type='quantitative' />
            <column caption='Variables' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='Labor Force' datatype='real' name='[Labor_Force]' role='measure' type='quantitative' />
            <column caption='Median Household Income' datatype='real' name='[Median_Household_Income]' role='measure' type='quantitative' />
            <column caption='Net Migration' datatype='real' name='[Net_Migration]' role='measure' type='quantitative' />
            <column caption='Number Employed' datatype='real' name='[Number_Employed]' role='measure' type='quantitative' />
            <column caption='Number Insured' datatype='real' name='[Number_Insured]' role='measure' type='quantitative' />
            <column caption='Number Unemployed' datatype='real' name='[Number_Unemployed]' role='measure' type='quantitative' />
            <column caption='Number Uninsured' datatype='real' name='[Number_Uninsured]' role='measure' type='quantitative' />
            <column caption='Population Change' datatype='real' name='[Population_Change]' role='measure' type='quantitative' />
            <column caption='Population Estimate' datatype='real' name='[Population_Estimate]' role='measure' type='quantitative' />
            <column caption='Poverty Estimate Age 0-17' datatype='real' name='[Poverty Estimate_Age_0-17]' role='measure' type='quantitative' />
            <column caption='Poverty Estimate All Ages' datatype='real' name='[Poverty_Estimate_All_Ages]' role='measure' type='quantitative' />
            <column caption='Poverty Percent Age 0-17' datatype='real' name='[Poverty_Percent_Age_0-17]' role='measure' type='quantitative' />
            <column caption='Poverty Percent All Ages' datatype='real' name='[Poverty_Percent_All_Ages]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Businesses]' role='measure' type='quantitative' />
            <column caption='Unemployment Rate' datatype='real' name='[Unemployment_Rate]' role='measure' type='quantitative' />
            <column caption='Wage Quotient Relative to US Average' datatype='real' name='[Wage_Quotient_Relative_to_US_Average]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Annual_Average_Pay]' derivation='Sum' name='[sum:Annual_Average_Pay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Annual_Total_Wages]' derivation='Sum' name='[sum:Annual_Total_Wages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Labor_Force]' derivation='Sum' name='[sum:Labor_Force:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median_Household_Income]' derivation='Sum' name='[sum:Median_Household_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net_Migration]' derivation='Sum' name='[sum:Net_Migration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_Employed]' derivation='Sum' name='[sum:Number_Employed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_Insured]' derivation='Sum' name='[sum:Number_Insured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_Unemployed]' derivation='Sum' name='[sum:Number_Unemployed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number_Uninsured]' derivation='Sum' name='[sum:Number_Uninsured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population_Change]' derivation='Sum' name='[sum:Population_Change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population_Estimate]' derivation='Sum' name='[sum:Population_Estimate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Poverty Estimate_Age_0-17]' derivation='Sum' name='[sum:Poverty Estimate_Age_0-17:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Poverty_Estimate_All_Ages]' derivation='Sum' name='[sum:Poverty_Estimate_All_Ages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Poverty_Percent_Age_0-17]' derivation='Sum' name='[sum:Poverty_Percent_Age_0-17:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Poverty_Percent_All_Ages]' derivation='Sum' name='[sum:Poverty_Percent_All_Ages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Businesses]' derivation='Sum' name='[sum:Total Businesses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment_Rate]' derivation='Sum' name='[sum:Unemployment_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wage_Quotient_Relative_to_US_Average]' derivation='Sum' name='[sum:Wage_Quotient_Relative_to_US_Average:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Annual_Average_Pay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Annual_Total_Wages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Labor_Force:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Median_Household_Income:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Net_Migration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Number_Employed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Number_Insured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Number_Unemployed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Number_Uninsured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Population_Change:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Population_Estimate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Poverty Estimate_Age_0-17:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Poverty_Estimate_All_Ages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Poverty_Percent_Age_0-17:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Poverty_Percent_All_Ages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Total Businesses:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Unemployment_Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[sum:Wage_Quotient_Relative_to_US_Average:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[Multiple Values]' max='1.0' min='-0.10000000000000001' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[none:F1:nk]</rows>
        <cols>[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{08650F1A-E708-43A8-8BCE-AF0B42E07BB6}' />
    </worksheet>
    <worksheet name='Gulf Coast Damage'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Damage' datatype='real' datatype-customized='true' default-format='C1033%' name='[Calculation_1200490820187131904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Crop_Damage] + [Property_Damage])' />
            </column>
            <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column caption='Property Damage' datatype='integer' name='[Property_Damage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1200490820187131904]' derivation='Sum' name='[sum:Calculation_1200490820187131904:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Midwest&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alaska &amp; Hawaii&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Coast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Gulf Coast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountain&quot;'>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Coast&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]'>
            <groupfilter function='member' level='[State (group)]' member='&quot;Gulf Coast&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]</column>
            <column>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]</column>
            <column>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]' field-type='quantitative' max='4895381.6456061192' min='2390693.1027574637' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]' field-type='quantitative' fold='true' max='-8382678.7134765852' min='-12765883.467517214' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' num-steps='5' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:County:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:County:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:County:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.2154695987701416' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' />
              <size column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:County:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.2154695987701416' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]' />
              <geometry column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.2154695987701416' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='121' />
                <format attr='has-halo' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]</rows>
        <cols>([federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)] + [federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)])</cols>
        <join-lod-include-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{CA02083E-7F41-4F75-85D3-6EB73B863937}' />
    </worksheet>
    <worksheet name='Midwest Casualties'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
            </column>
            <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
            <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
            <column caption='Injuries Direct' datatype='integer' name='[Injuries_Direct]' role='measure' type='quantitative' />
            <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' default='&quot;Midwest&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alaska &amp; Hawaii&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Coast&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Gulf Coast&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Rocky Mountain&quot;'>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Coast&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]'>
            <groupfilter function='member' level='[State (group)]' member='&quot;Midwest&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]' field-type='quantitative' max='6339625.7532279026' min='3834937.2103792476' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]' field-type='quantitative' max='-8148392.2666109484' min='-12548608.131930122' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='1' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]' field-type='quantitative' fold='true' max='-8148392.2666109484' min='-12548608.131930122' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='3.5248618125915527' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]' />
              <geometry column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='3.5248618125915527' />
                <format attr='mark-transparency' value='93' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' />
              <size column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:County:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='3.5248618125915527' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Latitude (generated)]</rows>
        <cols>([federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)] + [federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Longitude (generated)])</cols>
        <join-lod-include-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{6EC5A5F1-AFB6-4DB8-8765-8F5E33B96960}' />
    </worksheet>
    <worksheet name='Number of Weather Events in the US per Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Number of Records:qk]</rows>
        <cols>[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{2ABDD87A-D36F-40AC-BD25-3B4681696530}' />
    </worksheet>
    <worksheet name='Pie Chart of Count of Deaths and Injuries per Event'>
      <table>
        <view>
          <datasources>
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
            </column>
            <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
            <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
            <column caption='Event Type' datatype='string' name='[Event_Type]' role='dimension' type='nominal' />
            <column caption='Injuries Direct' datatype='integer' name='[Injuries_Direct]' role='measure' type='quantitative' />
            <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
            <column-instance column='[Event_Type]' derivation='None' name='[none:Event_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[pcto:sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0noyncg050tm1e14la92z161fwhs].[pcto:sum:Calculation_1200490820189949953:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]' />
              <wedge-size column='[federated.0noyncg050tm1e14la92z161fwhs].[pcto:sum:Calculation_1200490820189949953:qk]' />
              <size column='[federated.0noyncg050tm1e14la92z161fwhs].[pcto:sum:Calculation_1200490820189949953:qk]' />
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]' />
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[pcto:sum:Calculation_1200490820189949953:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1314364671707153' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FB71BD63-4FB7-4259-899D-AE9124DCC2F4}' />
    </worksheet>
    <worksheet name='Property and Crop Damage for Each Event Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
            <column caption='Event Type' datatype='string' name='[Event_Type]' role='dimension' type='nominal' />
            <column caption='Property Damage' datatype='integer' name='[Property_Damage]' role='measure' type='quantitative' />
            <column-instance column='[Event_Type]' derivation='None' name='[none:Event_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Crop_Damage]' derivation='Sum' name='[sum:Crop_Damage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Property_Damage]' derivation='Sum' name='[sum:Property_Damage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Crop_Damage:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Property_Damage:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Property_Damage:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Crop_Damage:qk]' />
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]' />
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Crop_Damage:qk]' />
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Property_Damage:qk]' />
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Property_Damage:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]</run>
                <run>&gt;&#10;Property Damage: &lt;</run>
                <run>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Property_Damage:qk]</run>
                <run>&gt;&#10;Crop Damage: &lt;</run>
                <run>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Crop_Damage:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{49641431-445E-48F9-9FFF-E774C0358FA8}' />
    </worksheet>
    <worksheet name='Scatter Plot Events vs Migration'>
      <table>
        <view>
          <datasources>
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='State Name' datatype='string' name='[State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[State_Name]' derivation='None' name='[none:State_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column caption='Net Migration' datatype='integer' name='[NetMigration]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[NetMigration]' derivation='Sum' name='[sum:NetMigration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:State:nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Number of Records:qk]' scope='cols' value='Number of Weather Events' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]' />
              <lod column='[federated.0noyncg050tm1e14la92z161fwhs].[none:State_Name:nk]' />
              <lod column='[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[sum:NetMigration:qk]</rows>
        <cols>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Number of Records:qk]</cols>
        <join-lod-include-overrides>
          <column>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{57CA6A56-9EE9-42B1-A285-C36DB3C121B3}' />
    </worksheet>
    <worksheet name='Scatterplot of HHI and Wage Quotient vs Total Damage'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Damage' datatype='real' datatype-customized='true' default-format='C1033%' name='[Calculation_1200490820187131904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Crop_Damage] + [Property_Damage])' />
            </column>
            <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column caption='Property Damage' datatype='integer' name='[Property_Damage]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1200490820187131904]' derivation='Sum' name='[sum:Calculation_1200490820187131904:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Wage Quotient]' role='measure' type='quantitative' />
            <column-instance column='[Median Household Income]' derivation='Avg' name='[avg:Median Household Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wage Quotient]' derivation='Avg' name='[avg:Wage Quotient:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:State:nk]' to='&quot;New Hampshire&quot;' />
              <groupfilter from='&quot;New Mexico&quot;' function='range' level='[none:State:nk]' to='&quot;Tennessee&quot;' />
              <groupfilter from='&quot;Utah&quot;' function='range' level='[none:State:nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Median Household Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Wage Quotient:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]</rows>
        <cols>([federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Median Household Income:qk] + [federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Wage Quotient:qk])</cols>
        <join-lod-include-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{FCB54955-37AE-4D29-8382-F64C05F467BB}' />
    </worksheet>
    <worksheet name='Scatterplot of Unemployment and Poverty vs Total Casualties'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
            </column>
            <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
            <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
            <column caption='Injuries Direct' datatype='integer' name='[Injuries_Direct]' role='measure' type='quantitative' />
            <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
            <column datatype='string' name='[Lookup ID]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column caption='Unemployment Rate' datatype='real' name='[(%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Poverty Percent All Ages]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[(%)]' derivation='Avg' name='[avg:(%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Poverty Percent All Ages]' derivation='Avg' name='[avg:Poverty Percent All Ages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <natural-sort column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:(%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Poverty Percent All Ages:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <lod column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]</rows>
        <cols>([federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:(%):qk] + [federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[avg:Poverty Percent All Ages:qk])</cols>
        <join-lod-include-overrides>
          <column>[federated.0noyncg050tm1e14la92z161fwhs].[Lookup ID]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{7C9A5853-5AE9-4B88-A1D4-40FCD8117303}' />
    </worksheet>
    <worksheet name='Total Casualties and Total Damage '>
      <table>
        <view>
          <datasources>
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Damage' datatype='real' datatype-customized='true' default-format='C1033%' name='[Calculation_1200490820187131904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Crop_Damage] + [Property_Damage])' />
            </column>
            <column caption='Total Casualties' datatype='integer' name='[Calculation_1200490820189949953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths_Direct] + [Deaths_Indirect] + [Injuries_Direct] + [Injuries_Indirect]' />
            </column>
            <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
            <column caption='Deaths Direct' datatype='integer' name='[Deaths_Direct]' role='measure' type='quantitative' />
            <column caption='Deaths Indirect' datatype='integer' name='[Deaths_Indirect]' role='measure' type='quantitative' />
            <column caption='Injuries Direct' datatype='integer' name='[Injuries_Direct]' role='measure' type='quantitative' />
            <column caption='Injuries Indirect' datatype='integer' name='[Injuries_Indirect]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Property Damage' datatype='integer' name='[Property_Damage]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1200490820187131904]' derivation='Sum' name='[sum:Calculation_1200490820187131904:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1200490820189949953]' derivation='Sum' name='[sum:Calculation_1200490820189949953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0noyncg050tm1e14la92z161fwhs].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]' />
              <lod column='[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]' />
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' />
              <lod column='[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]' />
              <text column='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' />
              <lod column='[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk] + [federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk])</rows>
        <cols>[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{AD5CA6F8-725B-4BB4-9A9D-ABA56FB0379C}' />
    </worksheet>
    <worksheet name='Total Weather Event Damage by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Storm Data (Hyperion Storm Data)' name='federated.0noyncg050tm1e14la92z161fwhs' />
          </datasources>
          <datasource-dependencies datasource='federated.0noyncg050tm1e14la92z161fwhs'>
            <column caption='Total Damage' datatype='real' datatype-customized='true' default-format='C1033%' name='[Calculation_1200490820187131904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Crop_Damage] + [Property_Damage])' />
            </column>
            <column caption='Crop Damage' datatype='real' name='[Crop_Damage]' role='measure' type='quantitative' />
            <column caption='Event Type' datatype='string' name='[Event_Type]' role='dimension' type='nominal' />
            <column caption='Property Damage' datatype='integer' name='[Property_Damage]' role='measure' type='quantitative' />
            <column-instance column='[Event_Type]' derivation='None' name='[none:Event_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1200490820187131904]' derivation='Sum' name='[sum:Calculation_1200490820187131904:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]</rows>
        <cols>[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]</cols>
      </table>
      <simple-id uuid='{6C65688A-AF73-41B8-9F31-4B4A54086AA8}' />
    </worksheet>
    <worksheet name='Tree Map of Uninsured Rate per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='County Data (Hyperion County Data)' name='federated.1mzj6p50iraxyi0zst4lq1vp9nbw' />
          </datasources>
          <datasource-dependencies datasource='federated.1mzj6p50iraxyi0zst4lq1vp9nbw'>
            <column caption='Unins Rate' datatype='real' name='[Calculation_1000080637227728898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Number Uninsured]) / sum([PopEstimate])' />
            </column>
            <column datatype='integer' name='[Number Uninsured]' role='measure' type='quantitative' />
            <column caption='Pop Estimate' datatype='integer' name='[PopEstimate]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1000080637227728898]' derivation='User' name='[usr:Calculation_1000080637227728898:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[usr:Calculation_1000080637227728898:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[usr:Calculation_1000080637227728898:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[usr:Calculation_1000080637227728898:qk]' />
              <size column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[usr:Calculation_1000080637227728898:qk]' />
              <text column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' />
              <text column='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[usr:Calculation_1000080637227728898:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F8E06D96-C69B-42D0-9D5B-C339E8696522}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='Number of Weather Events in the US per Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0CB08385-AFFA-41C2-B672-6ECCE0888724}' />
    </window>
    <window class='worksheet' name='Total Casualties and Total Damage '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[:Measure Names]</field>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0448867A-A51A-48A3-8424-3360AB9B0EA3}' />
    </window>
    <window class='worksheet' name='Total Weather Event Damage by Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D328259B-2F68-430A-B534-715308356C4D}' />
    </window>
    <window class='worksheet' name='Property and Crop Damage for Each Event Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Property_Damage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2703A2D6-02D7-4371-85F4-8BDE679979FA}' />
    </window>
    <window class='worksheet' name='Damage per Region'>
      <cards>
        <edge name='left'>
          <strip size='284'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{985A6D5F-7104-400B-A217-2DCE3C847BBA}' />
    </window>
    <window class='worksheet' name='Average Median Household Income by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8739FD36-9A56-4854-BC45-A34939A38606}' />
    </window>
    <window class='worksheet' name='Gulf Coast Damage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:County_Name:nk]</field>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820187131904:qk]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{39D07E64-6255-4D97-9A64-21F17AE5DFAA}' />
    </window>
    <window class='worksheet' name='Distribution of Damage and Casualties Per Month Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_ID:ok]</field>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:Month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B29453B2-3EFD-4623-9761-774A72EA9025}' />
    </window>
    <window class='worksheet' name='Pie Chart of Count of Deaths and Injuries per Event'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0noyncg050tm1e14la92z161fwhs].[pcto:sum:Calculation_1200490820189949953:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D52488F-F62D-41E5-892D-A54B9CDDEBBD}' />
    </window>
    <window class='worksheet' name='Casualties per Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7AC2ADB4-82E7-4F8A-89EE-9136D1133CC3}' />
    </window>
    <window class='worksheet' name='Tree Map of Uninsured Rate per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[usr:Calculation_1000080637227728898:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CE950B7-B524-4503-B482-3ED9D813C1EC}' />
    </window>
    <window class='worksheet' name='Midwest Casualties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0noyncg050tm1e14la92z161fwhs].[sum:Calculation_1200490820189949953:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:County_Name:nk]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DB7145B8-1AA1-4B7E-96C0-BDE72F310A31}' />
    </window>
    <window class='worksheet' name='Dual Combination Plot of Indicators That Influence Population Change Most'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFC7E7F5-DEFC-4F64-BE71-F1905C4A38C7}' />
    </window>
    <window class='worksheet' name='Dual Combination Plot of Net Migration vs Casualties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D5588C9-AE55-485D-89FF-A0D36474A450}' />
    </window>
    <window class='worksheet' name='Bar Chart Event Type vs Net Migration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:Event_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B697079C-7BD9-48D3-B341-AEE0F073452A}' />
    </window>
    <window class='worksheet' name='Scatter Plot Events vs Migration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:State_Name:nk]</field>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{712995F9-05E6-4E09-BDD9-F8AB6E691D29}' />
    </window>
    <window class='worksheet' name='Business vs Crop Damage'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[sum:Number of Records:qk]</field>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[State (group)]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[diff:sum:Total Business:qk:3]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[tyr:Year:ok]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[tyr:Year:qk]</field>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AFDD9DD-2AD6-4CF2-AC47-B596D30725A2}' />
    </window>
    <window class='worksheet' name='Scatterplot of Unemployment and Poverty vs Total Casualties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA36FA2F-7A2E-4EB8-922C-EFE043DB0D18}' />
    </window>
    <window class='worksheet' name='Scatterplot of HHI and Wage Quotient vs Total Damage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mzj6p50iraxyi0zst4lq1vp9nbw].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76A296F0-9F31-4780-B38F-7271E4F73B9F}' />
    </window>
    <window class='worksheet' name='Dynamic Graph Casualty Prediction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0noyncg050tm1e14la92z161fwhs].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[none:Forecast Indicator:nk]</field>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[tyr:Year:qk]</field>
            <field>[federated.0noyncg050tm1e14la92z161fwhs].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7ABB8829-893C-428A-B5E4-E5617964081D}' />
    </window>
    <window class='worksheet' name='Figure 21 - Correlation Matrix'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[:Measure Names]</field>
            <field>[federated.0cg3ox00njvrhr1frgtae1f6z4ag].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5B1D901-468E-4E0C-9DAF-81D2D18795B2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Median Household Income by State' width='192'>
      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
      +P8BCg/19yOB//gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bar Chart Event Type vs Net Migration' width='192'>
      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
      AcK0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Business vs Crop Damage' width='192'>
      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
      f1GZUcuq1VcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Casualties per Region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2daXBk13WYv7f0vqEb6wAYzGD2IYczQ3K4SqREi5REyZEsR4qqUnHilF2u
      UvIryY/kt/+mUuUsjst2bCuxYy3xEoWWZIuUxEWkhsMZzr4AMwNgBjvQQO/r6/dufoCvp7vR
      3ejG1gD6fVWsIbpfv3ffe+fce+65554jJZNJoaoqFhbtiKqqKg6Ho9XtsLBoCXKrG2Bh0Uos
      BbBoaywFsGhrLAWwaGssBbBoaywFsGhrLAWwaGusFbA6CCHQdZ18Pl/8fyEEDocDh8OBJEmt
      bqLFBrEUoA6aphGPxykUCmWfZ7NZPB4PHo/HUoJdjmUC1SCXyxGNRjEMAwBJkorCLoQgnU6T
      yWQQQrSymS3FMAxGbn2Mruutbsq6kbLZrLBCIcrJ5XLE4/GicAshavb0gUCgbUNJ7t76BUHt
      LWZjHSjBT3Hg0GN4PJ5WN6sprBGgAl3Xy4QfqGvmyHJ7PsJYLIIUeweHXeJAV5RA9g1Gzv9X
      kokEd+7cplDQWt3EhlDj8TiyLCNJEoqiYLPZcDgcKIrS6ra1BHPCa1Kt95dlGZvNhtvtxmaz
      bXcTW46u68yM/B2DHStzI0mScDllHOIAt298iJp8m5HYcR5/7jda3NK1UQuFQtkLzmQySJKE
      0+ms+oJN4dirk7/S0HBFUfD7/UWbX5ZlnE4nNpttz95/JZUdgKZpjF37W/q994GVzw1DcHFi
      iAPHzhJa+j7dAyrXHoQByGYzTD4YQ9fiYGTo6D5BMNS5Y8xGaWZmRlR7meao4HQ68Xq9xYdg
      ugJVVd2TyiCEIJvNFt2ce+nemkHXdW5f/Sl37k4zPHwIj0vByM5AdoKBzjRyxXO5MuYg1BGg
      PzCPqkhMh2XytuNIFDjgH0WSJHRD8PNLOQ4M+Dly7lv4Ax0turtH1FSA0pfvcDjw+/1tKwzt
      hhCCkSs/otf2EeGoTneHgqLUf/fRhEGHr3w+JIRAIKEqctGbBjCVeoyT576xJW1vlrozOFPg
      c7kc6XR6Wxpk0XpG71zjwb2PUBWJvk51TeEHVgk/rMiPqsjIsoyqqsiyTE4TjI4tcPnyJbLZ
      7FY0vylqjgAATqcTVVWL9m9nZ6c1CuxxZqfukp/5Dr8cCbK/Y47TR+wbPqfpKTMMA8MQhGMG
      hgHL0vM8/dznSSTi3Ll5CV3YeOyxUyxO/BRNK+DwH+DwiRe31NNW1wQq/RcgGAy2pdejHRBC
      MDN5F7H4Vwg9xy9vKbz+3NYt8hkCFiMGOd0JwiCe0knlXRzrTxH0rcicVhBMLPUQ3PcUQ0ee
      2RLPZN0RoHIS2M6LPnuRTCbNez9/g8GhY5C+RaftLm6nRCZncHMsz7mTzm1phxCCy6MaTx2v
      PtosxSEcd5B3Ps2LL722qdeu6wWS5fLJSygUwsogsTcQQnDtwg+Yf/AR507asKnlMhBJ6Pjc
      MmoD9v92IIQgnhYsp7zYPAcBgZGPgr0LXenhxOPPYreXK5BhGMzPzxGq43atqQB2ux2v10sk
      EilGQAYCgS1f+RRCYBhG0Q1bSjabJZfLoSgKqqpit9vb2lW5XgqFAu/87EecCF3C73n0PqvF
      Ne2GZyuEYDq+j54jXyPU2U0mk2Hi7kVysdsYuTAeh0ZePUTPgU/RN3C47Lc1u/NCoUAikSg+
      FLvdvuXCr2kasVgMIQQej2fVirQkSWWeA3NFtnQFW9f1Vb+xWE2vZ7pM+HczkiQxGJgjfPe/
      MXs7gCrl2N+pQXfxCGCc8NRDZoyv07//xKPf1psDlF7A7/fjdDq3TKCEEMRisaKAS5JU9DyZ
      ipfL5YhEImXtKl2MMwOxdF1H1/XiKGL+pygKDoej6ujSLhiGwcjHf0O/6wayXP4MakW2tvpZ
      VS64lv7dSDSueZwkSSwnbMSkswyf+DQ+n3/t/QCm8CQSCQqFAm63u+ps3GyIYRjFXjiTyeB2
      u9ccOYQQ5PN5CoUCiqIUV5tLb1jTNDKZTN1zpFKpNR+ILMtF805RlJa/3O1meuohXuN62TtZ
      S6DqRcNuB2a7KtvWaCh6aVRvyKcR4iPmbtwgc/g3VhSg1o1X9rCZTIZsNouiKHg8HmRZJpPJ
      4HQ6SSaTReEvPVc+n1+1ccRcFDEbZZo+kiQRCATI5XLkcrkys6vaS1jPAzEMg2w2Sz6fx263
      Y7PZcLlcbRPVmU0v0e1+9BwrA/8aZSP7IJpVpkZ7+WaO7w2kmbr9x6j1hpHKz+12O7quUygU
      KBQKZLNZ7HZ72caRSvL5PPl8vuwzRVFwOp1FU6R0rpHNZvH5fHi93rLfOBwO7HY7mqat2qG1
      HkxFMJXB4/EU1zj29qigIEnNC/BmbvypF2pe7bu1TJ1GhL/aOx3sNlDrDW+lQ4+qqjidTjKZ
      DJqmFU0WTWs+7lvXdVKpVM3v67XHbrdvigKUYo44kiRhs9kIBAJ7Nhy8kHqA5Gp1Kx5Rz/za
      ylHG/H7NWCDzP8MwEEIUe+31CH4jmG7QWjdf6evd7GsXCgXS6TS5XG7PbXdcXJjBnr/a6mZU
      pZlnXSqXlYLerFu85iS4cvjRdb1op5dOKjabTCZDPp/H4XDg9XpX2eZb3TMbhkEqlSKdThMI
      BHA6t2c1dKvJ53Msjf2A/kB1U7VdqTsClA5P5sqw+fdWegZ0XSedTrO0tLRqbrFdC1+mV6nW
      3GY3kUqluH/5u/T751vdlA2xFe++5ghQ2suX9sKN+l43g1J/vmmemAtl66URj5eJpmmEw2E8
      Hk/RY7RTKRQKTE0+xB/oQJIklsIL5NOziNw8Nu0+A8H82idpQxoK7ClNDQLb6xfOZDJlXqeN
      pOBoxuNlYhgGiUQCVVWLq9M70WWazWZJPfhThGOlbV0+GdkG7FydbQmV77muAmyG332jbOZG
      nMr2Vq4s1sMcfbxe7yoX7U5AlmVURaYzUG6m7gU2s7OtfC5rzgEaTQ+yW6llV9a618qsETuF
      RDyCx9ncYtBeptrKsfl5KQ2N5ebJ1rtquJ00o6TmPTWjBPl8nqWlpbphGa1g4v4N/J7Vm5h2
      I/XcnPWo5p0sld1qMrvzjNkNsl7FrPbAa70Ac61A07Qd0RGMjIwQW7hBocnp0VYqSumzqyfM
      jTzvelQKd7PvY1U06F5MdVKNag+7dLJfuuhXGuhXeQ6Xy4XL5UJV1ZY+M8MwuH3xewz5RoHW
      jNDbdf+beW97ZgRYz3C5lkfIXJUu/azyuHQ6TTQabXmGA1mWOfzEV3mYOsPscmtea6W5Uc/0
      2Mj5TTZD4YojwG6f7K7l9ajnujS3fm7kZZk75nbCDrVUMsH0zT+nz7fQ0nZA/fdS7zlVyuNW
      jWh7ZgRYi1qLX0DVFOi1qPV9LpcjHA6TSCTqxjJtBx6vj/2nf5MHkf1sdzOamcDWGyEajQTd
      KEUFWM+seyexVrhssxsqau0aq/cbwzBQFIVEItHQ5pytxOVyc+LZf87D+CHyha1pR73n06z5
      U8ts2upnuONHADMOqVl/fSnV3LdruXTXaw6Z4eLpdLrlhSNsNhunnv8NZnNPrXnseju+yh5/
      t3WgO14BoPYGCjNb81pUerkqvTmlwl7plmsWM2zDMIwdEVItSRL7j77EYqz2q16v0NbrJHaL
      ImxYATZzll/v/OaCVem1DMNoaEGq8rdmT1U51K6k7iuPe9rIi8zn8zsip2ogECTNcM3vN/oO
      a3l+doMS7IoRwGQjocm17P/SF1X6wjZjIlu5FbRVSJKEYvNt+3VbPfo1wobTvLVay9fjJWgm
      InSjPaMkSei6jmEYxZVjm8227UU2ugaf5OHYErI2iSwZ9ARlQLAcN+juaN80MQ3lBbKoTiPR
      pC6XC7/fTy6XK0v6ZeZYymQyZUkCtpp8Pk84vMitq+/Qs+8wwVAf2vT/pKtNd4pZiT7XQamL
      1PT0lO6SK1UIcwO/w+FAVVU0TSvmOKqcg7jd7i3vie12O93dPezzPETPysQX5tjfpsIPu2wO
      0GpK3Xy1PEeVo0HpJn6zh8/n86vmGMlkcssSDVRis9lw97/O8nKYfC61YqYZEEu1nyJYI0AT
      mL176WS80gyq/Ls0j1E9ARdCkEgkCAaDm2IKCSGYfDhOMnyNQi7GbNTN51//erF9w0fOINv8
      xGNR7s0vkzE6OPrEazx4eA2RvM5wT6LsPvYq1ghQB9PUKU0IUM2bVG+FOZ/PF7PmmbFCtdA0
      jeXl5Q3lPRJCcPXKx3znz/+A+PhfMOi6wsGOcQa7Vy9SHTgwTHjyPPGsG5/0AC2b4PEnP4fk
      2Lcjt31uBcURYLf4bbeTyhghUxFUVa0Z/Vmtx9R1nWQyicPhWLNHLRQKRCIRAoFA0zmQlpeX
      Gbn6Yw51jDJ8rtQsA5u7r2q7HB1P0D8wQHT+Bvnpv+D6qKAnCLreHrJQpuZ7fbhbL6YCeL3e
      VXlOa22kKcXMoJdMJhu6npmDyZwrrEWhUOCnb/6YVDJKINCxKuvz6MM8kuJZ9TtFUXj63DNE
      x7/P5MRNtILB8D6pbGvlXsdygzZAR0dHsW6wpmlEIpGiYJopW0rnANW8Qc0iSRIOhwOXy1W3
      LFU0GuX+jTfpd90gkxOkczDUu9p8mYt5yBs+JMWJocWw+Y4jtCUSWTfHglfRDbGqSkw7YE2C
      G6C0h89kMjXDJTYritGsUL9WPbaZmSnu3rnKEf8NPC4Jj6u2APcFUkBpPtbzYIdl3fjEtFt9
      L+2ApQANYKZqhJWFrVwuh2EYxXlBpQdoPSEbsiyjKAqFQqFY/qmU0jlaKpXi/fffo1f5gONB
      CfcGTJaQf/VosRkj2G6hPab6GySVShWD7sx6AqXCbk6OSyfLjZiVLpermG3OFDqzAEnl70uv
      97N/+Cv61F9ysE/G49rcMIbtisPfKVgjQIPkcjlcrkd5xRVFQYiVjfN+vx9FUchms8V9AI2Y
      Etlslo6OjmIKSCFEsQ5CLWRZ5uxTz5GajSLL0eLnjfTY7dKrN4M1CW4ASZKKE2GonWEOVnro
      SCRSDJFYyxzyeDz4fM1HauZyOcbvvEchM4uRW6DXH8flsN5js1gjQAOYvn+Teh2GJK0U8TBN
      pmpeIfP3G0ml4nA4OHHmVcLhMIoic+3CG/jkCY4MWD18M+xKBdisobyR88iyjM/na3hlVJJW
      qsyUKkDpv6YymOHRG11xFYbB6K13OdL1EJ9LrHLLWtRnV06CN/pyZVluqFyqJG1OedhSJSit
      sWD6+ptBCEE0+qhUbHdPD129A6hyofj9esjl21NhdqUCbARJksoK9Pl8vqrCrSjKuivEOBwO
      /H4/kiSVVcSsPCYQCDRdc2BlPhIs++zQsWdZyK5UQG+2948ldWJJg4e5TzMfb2wuYug6s4vV
      V7UXFxJsbgW3R8SWE0SSecanY5t2zrZTAFM4fD4fPp8PTdPwer3Y7XYURUFVVdxuN52dnesu
      j2T27F1dXWWT58pjNstUEUIgGbWLDtZiOuIl7f0KtqFv8dSzr6J7nqt7/Pe//0v+4//6GD2X
      54fv3COyFOfDazMUDMHY/XlGJ2O8+/YoKU1jeiHFvXtzjDxcEdbU0hL/5nd/xO/+0XkAMvEY
      f/CXV1f+/c5VwgtRProxRyqZJhzPM/ZgCU3LMx9OMzIyw73pOKlYmnhaY2Yh0fxDqsGunAM0
      grnLKp/PrwpDNhPbmotOfr+/WGV+syg1e7xeLzabjXg8XvzcjPgMBAIbvpYsyww89g2m7v0c
      LTWB3xGnM6CwFBMk9R5QQ0iygshOcX/a4NyxDIl8NwNPfBO/P0g0uszd0TvoiZvQUf0aQi8Q
      Fw5CUpa0saK0IyMz/OAnt5lYPsMb3/uAX/nSObyFPP/jf1/gG19+kvcvjPHWh7P8/n/6x9hU
      GyoGZ452EU7k8QC//OAO4bk5nN193Lw9zf/7yW1e+vxZIstZZkYmef7FYeRgF2OXx3j74zD/
      +utHET02rtxa4FNPDm74ucEeVgBJkoq++mqYSmFuTNlKV7A5IjgcDjRNK/69mdkTgsEugs98
      AyEEkeVlpqZu0HHgMMP9jwRF0zRyl37OVHyeoeOv4PevmFJTE7eQYu8w2FV7v8L8gxk+vjWH
      X9F4/1YEELxzYZIzx7vJagZffe0xfnJpgteOBcAQxCJR7s5pDIYcaAbcvjzB8Il+/vDPPuCp
      J4fwyPDCiyf4zV89yLd/OM4vLk7zxJFOFI+X8OV7PPvpo/zgrXv8+9/q4GcxiT6fA53NN1ms
      dQBWVmS9Xi+aphWD3rYCU+BL9wG3gmg0WrY3QQjB9MMRlKXv4qnRpMhyArvXg1PSmVvKIisS
      sq4Rzxr4OzxE5pdxdQRwSwaBkIu5xTTJWBKH28nQYAgFnas3Zzk41ImsqngdEnNLWfo6ncwt
      ZZC0PKmCINjpJ7Ucp7uvg6mZGEcPBrl5ew63101nwAY2O8lEloHezclyYSnAJ5jPoKura88W
      ya5HoVBg9PzvMRhqLGR7s68Nq93S5t+lazCbTdtNgmvR7n5zRVHQ5c5tv65pApodUOkuPPPv
      rcRSgBKEEBsuw7oezLxBrUSSJGz+Yy25rqIoxf/MqNjSf83jtiL3qKUAFbQioe3onRtM3L8B
      rEzKH4zdYnpydEuvWXmfQgiMbOvrCdSiVn7YjbJnvUDrpSWbwXMTiMQNbiz8AiSVAf8MiTQs
      Ov8V3d09m365WCzCe299j6OnXuL48ccBeHD/Bp3KFaD188F6aWYqj9noaG0pQAWtSOwqqx46
      HRpzMY0CNuIpCPpgavQvCc+cYf/hZ3A6nZs2GQwEgpw991ki97/D9cUehJ6mw5nA5Wu9QVBP
      +KuNArXeU6OKYXmBqmCGMmyXN0jXdSbu32Jg6ChOp5Ol8Byx+39Gtz9PQReEYwqZXAHP4Nc4
      fOxsU+eORpaZm7pFqPcIPT0rmSGWl8KER79NX2D7PT71aKTnrzx2LdNozfNYClAdm81GZ+f2
      e0VM5maniMxcwF24TsbxArLNx9DhJ5taOygUClx5979zfF+Ea/cKePd/lYPDR5i7+afs64hv
      Yeubo1L+qgl1NffoWudrZBRoSxOokTDoZqM0N5u+fYN0BLv48D2Nl199bV0m2b2b76BlwhR0
      meF+mdn5v2EprbCvY2esc6zVY9cS5LXeXTPzgrYeARRFqVkHQFXVdUVr7hQMw+D2B/+Foc7y
      yMmdst6xHnNlK9jSWY8ZWdlshrPtwul04vV6q36n6/qGUhTuBCYXdBajj9ydO0H4a/nyW9W2
      LTGB3G43bre7uKqn6zqJRIJcLrcVl1sXNpsNVVWx2WzIskyhUCjm/FFVFVVVWxars1GEEIxc
      f49cJkVXQN4Rgg/1bf21frdV97AlCuByuYouu0KhQDwe3zEvAVaEvzQLs9lWr9dLNpsln8/X
      3CizG5icuEMXP0Pab6AV5B2Z8a0ReahMN7kVMrTpCqCqatF9aBgGS0tLO0b4zZw+taqxSJJU
      /H63Cn82myU18/cEQzID3a3v/Vtp7jSyRrDpClCaSrzVFdNNJEkiEAg0HOq8W4U/HA4TnrrI
      YGjnuDhbxVrvsBh8t9ZBpb2hGbBUj9KedasCvBoVUHPjSSgU2tW9eqN0dnZiGKtzFm1FENlO
      p1FXadkIYNaoMnPbmNF4ZmrAYDBIMplcM2DMTBe4VQpQmmenWgy5mWLQrMbYLsUePv7wTdTU
      Bwjn6tSKO2EkNml0oWqji121QlpK92OrsNKzB4PBqjkpYUUxzD2ztcr8eDwe7HZ7sTq6EIJU
      qvmN2o1SS/hLMzK0U69XKBTIxifY56s+Qm5W8Nh2ohVWUrZv5D2upQSyzWYjFArVzVJm9qCZ
      TKZq72/60x0OBz6fr+4C02ZSen6bzYaiKHi93oaT0+4lFEWhd/gzZArlm+zNzmg3Jcuajbh4
      +6qTa/fyDdvy9ah1/5IkoZobEtbCLPNTiVkHtzI6T5Zl7Hb7tiwmmffg9/vbxtypRJIk9g8d
      5PqUl1w+gd3WWM+5U0aG8VmJuYhEf0hjMlzg5SfyyHJ5OEoibWBXJRz26pmzTZq5F7nRxZ5q
      JoXT6azqLxdCkM/ni+kBtxIz7Ug7C7+Jw+Fg35EvcHFU5f6MTDSp15wEl362lcJfa+Qp/Wwu
      3snAmW/xylf+AxnPFzmxv4Asl7cvmjC4fBemFzUMIdANwcgDnYXI6nlm6T2v1QnIzcSYu1yu
      YliDaWvXErpUKrXlvYqZ4nC7qqzvBvoHD/Lyl/8d86l95PJi1RxpJ82NUlmYSp8hdPjryJLg
      9sW/ZnBwiIeJY9x+KBP/pG7x1ILOOzdD7O82uPNAcHXcxzvX3SQzBYK+jbm1pWw2KxqNfDQM
      g3A4jCzLhEKhVUJnartZEG6rCz97PJ6yVWeLR3x04QPGbvwQh8PJ4MEzFPIR9nmmCPkemaSt
      WpAyrzuZPsOJJ7/C2N3r2OI/JuTNEU8ZeN0Sy3GDhYjMgV64cLuA7D5KJpPk0LFn0AoFenp6
      uXPpb+jxxTk0oGK3rU+pm5IcIQQej6eYWLbyO7PE53Zs8Pb5fEW37W5jdnaGffv6t+z8hmHg
      kiN88TkbsaTGyPRNegeOkjCGCIr7xeOujwlODNGSUInpaAfufWe4c/09+tWfo3hX2uD3rMhV
      V0ChK7CStFeRBOGlRV58+csoqp2e7h6cLhcL0yeYmJ5lMTbD2aMCn1smnTWw2yRUpbF7aspu
      UBQFj8dT1uOagh+LxVhaWmpY+KvZpG63m66uLrq6ugiFQnR2dq6KJDXjeHar8APcvXWeifF7
      W3b+kVsfszQ/iiTB+IzG8yfz+MU1BryPhD+WEqQzOnbb9puOy0kbjt7X6QgE6Oo7Sjpbe9+v
      IUAAfmeKXDZDKBTC6/Ohqir79p+kI9jFgwUHyQzkNcHPLtso6E3sB2jGBKqGEIJIJEI+n2/4
      N16vt7hOoCgKbrcbl8tV1Y4XQhAOh9F1HVmW6erq2vX2vhCCS+ffJLw4z0uf+xoeT/WQ7EaZ
      GBsluXiJeEri4LFn6B88zOTYFRKTP2D/J3vqzYVJIQSGgPdvqDx1RKtbWRI2JwjN7KgSaQO3
      U2JyuZO+498kGAoxOXYFf/aNVaNQ6QTYMODdK3lyyhCPnX6BTDpFZ1cvdy78T4RzmP2HztHh
      d/HL99/i4FA/x4KXkNfYM2yyIeNZCNFU3LyqqsX1gmQyWYzRqbdfwPTyxOPxoo9/tyNJEude
      +PyGz3P7yk/QkuP4bXMc8AN+mHiYoH/wMPsPnSXZfYjZm39EXyC1amRWHCGmFqc5PlR7w89m
      jLCl5zAMwdtXbXzq1W/Q3dODruuklq7Q1bHyTksXrQoFgfrJItjkgsZkpIvDwz5kSWZp+hIH
      D/4Tznz6t9jXP1T8zf4DR4jHY9y6uIiaH+fYkFo8b2WbMjmDRMrYmAJomkY0Gq1q9phRoaqq
      ous6uVyuOHE2J8qlXqV6mIXjduvurK0i0HmQROoSIZ/ATGeikkLX9ZVFQZ8f3/6vsTj5PboD
      Kw4JSZKIJwx6e3uRCzIwt33t9SocHRC43Csj3vjoR/R7JxGivLc2DMH1cZVcPsvZoyrzEZV8
      Lk1BV4nNnufxp75EV3dv1Wv4/QGe/ey/5K03/57R2RFc3i4key+SLQiSDSM3i8g8wMhOc2uq
      Y/0KIIQgkUhUFX5zUcoUWHP1uHRYUxSl4eJwsizT0VEjb3cb07//GLmef8vYrbdIL98mV1Dx
      dZ0sKgBAz75hLt/vhegDMjmBYRsgNPQqZwcP83D8Ftn493Haq/f0pWkLN2oGFXTBlTE3wydf
      LZrAmaXLqCEJrSBQFQlJglTG4OO7EgdOvkZ33zCZbJqzL7s59Smdezd+iiTb6B88WPdaoyN3
      OH3mKfr6vlTl25WsGqlUiuylH61vDiCEIB6P11zocjqdawrsdufe2etoWp7lpSV6+/at+s5M
      +Vi5PVXXdW5/8J8Z6qwdPr2exTJJkspC4uNJnct3dQ4ceZonnv31R9e+8Bco+hwzETdPHVwi
      qwlujxeI6Md56bNfpKfnUVIwIQTz83P09PRumhkshGheAcwdXvUmvcFgsOVZFSwa4/a1d+lX
      fropnVGld1DXdQwB1ye7Of3CP8Pr9ZaF3cRiMe5ce5te+2VUWfB/383y9LOv8MJLX9xwWxql
      KVUyDINEIlEm/Ka2N5PUyGJnUChoiMTlTZ3sGoZRLPwNMDrbwdCJL/BwYrRc+KPL3P3w9xhy
      X8KuCq7cl/jCV36Lc89/bsNtaYaG5wDmMFptY3tpvIfdbi8Os2YvAFirtTuQTCYDhSV0Q0KR
      N6YE5npQKckM9B39VfYPHV51fKFQYCmukJUPE0vbefHznyMU2v5EZA2bQOl0mnh8ta1YWZc2
      EAjgcrkQQqzsT02limHSFjsLIQTv/OwN9rs+pvuTKdts1INdLdDpLe/oZhZ1phcLnDlqL4Yd
      3JvMMzxgK1Oe0tEkmjSYTw/hcAUZOv4rBAIrFzEMo5gtJJPJtFQ2GjKBTLflqh9XCL+qqkXb
      v1AokEgkkGXZcl/uUCRJorszQNAnSKTh5lQXXcd+k4hxmpEplStjLmClJx+PDPD0SQe6IRAC
      ppbspDTvqpGjrDP0SBzrnuSg7zqTN/+qeMziwgK5bBZVVVveMa5pl9QKba60G202Gx0dHcUZ
      eqFQwOfztcVe3N3K/NwM0aVJXG6I2V8jkbmOz+9fyUbteAlD6Cze+n0SOTfPvfR15ke+ja5r
      SP7nCB05juPBt4HqnqJSL18mB+7OJ4rfdXZ17RiTeM1WFAoFotHoqs9Ll9aBsmzKQoiqAXMW
      Owuvz09H72lcoZfxqnZCoRB2u6NYk0AIwYzrOdzGeWx2O32P/TYutwtdLzB59U/o82vF42qt
      F9x6YKPvxD/l0MGDANwdvcWD+9d59fVvbuu91qLuHEDTNGKxWNVQh1Lzx+Fw0NHRYfX0exBN
      yzM+eonhY+eKpuzIrY/Yxw+rHl86GsSSgiXpJc4+8yoA4fAiF3/+xxiyi2Dfk1ZnGxYAAAoc
      SURBVDz/4mdaLjM1u2hN01heXq4p/PBoyNvK0qIWrcVms3Ps8RfK5nGK6mBspnb812JERzfg
      /M0CfftXKtBEo1F+8Q9/xL6OFDZjmemHo9y/t7VloBqhzAQy7X3DMNZMZ1gtBMJa3W0PstE7
      HOpXi2tAKxGbK/IghODuQhehQhcvvPYSvb19CCG4cukXRJMGC4FDnH75V+np6dkRsqLCo1id
      XC5X1dVZSrVG53I5bDYbiURi16cWtKiPEAKRX3z0/590erIsk87qhONOzj73a/TuGwIgGglz
      5/LfcefWFH2BJLHIAh//8ge8/mu/08rbKKIC5PP5phLYVvb+uVyuuECWz+eLmZct9h66roOR
      Lf79qPeXmIgM0nvw5aLwz07dY3p6kvnpEYZ7BM8+7iKvZbk87SeZTNZMTb+dqLCyertZ4QsO
      h6MtK623C9PjV5iZT3Cg69FmmWhK4X54kFNPv073J3XIxkYu4Er+CH1ZYLfB86ecpHOCe9Mq
      TmOUlX1erafMBNrwyVTV8gZtEmaHtFOepRCCsZEPcaff5IXHH30WTQqWlc/ymS98qiwCNDx9
      kRN9cGQApu0rHeLdSR3F2c1zr/zOjimaIsNKmEOjrJWvcae8sN2Moeu8+fd/SzabXfvgbeLh
      +C28mR/jcT7qLCVJwuuS8PnKd+rJsszAsS9z/pbErXENw4B/uCC4vxDi6c/89o4RfgA1kUg0
      lb2tMs9Mre8s1o+sKHz+9V9vdTOK6LpOcvanhEJy2cg0NqMT5RwvvXJm1W86OkKoNjdj4QC9
      /jhPPPuPODB8fMdV3VE1TWu41y6N86iVcNQMdLJGgr3B0uIsD0Z+ipJPFN/9Uhwexg5w4vSr
      nO4bqPquPV4fT7z4LzA+fINTT32Vvv7h7W56QzSdFwhqmzqaprG4uEgoFLIC4DYBIQRXLn/E
      Y4+fxuHY3p4znU4xcedtPIUrHAmthDxoBcGVcR/ujoMcfvxZ7M7aqWkikWXSyWVcgUP09B3Y
      zqY3RVP7AaC28Jt5fbLZ7LYkxmoHJEni8VNnt91mXpyfZPn+dxnseJTePpGRmMufIzQQ5OzT
      L7K8tITT6ar6e8MwuHfnIgNDJ+npXb1FcyfRkAI0klrbnASV7gay2DjbLfyx6DKJ8T9nX0f5
      ltdbY3myaoQXXnoOWInorIUsyzyzCWlftoM1wzUrhb9aEQ2zDJHD4SiuBFvsHsz9HkIIpicu
      0uVfEX5JktANmFooMLMkOPbYM3R1dZcFvC0tLbWy6Rumof0AUF5WpnI08Hg8xfphO8nFZVEf
      wzAYu/MBqcWPyKbjJJQnscsp3D4ZIQwWIwWyRgdZ6SCvfOkcg4P7y34vSRKhUAhYkZPRO9c4
      fnK1R2gnU1cBqmXUqvxMURRrwrsL0XWdO5e+R797lGAQ7D0SY7PXQOQYmbRx6PQ3mZu5yLnn
      f6WYyLde6SUAl8e/be3fLJpSAPOz0pu2QqF3H0II7lz+IYPeUZJpiZvzRzjov0M8JRHN9vD8
      Z79JINCBx+Ojv3+goXNKksTQ0M50ddaj5hygUvhrTYLXI/yaplkT5RYhhODhxF1ysREkJOI5
      L0MHj0Pwc3QMvEzO8HH50nky6TT9A4Otbu6WU3MEqNX7m94e0xwyJ0/NKIKZMcKsPGmxPWia
      xvn338KpXSUct6FrBjennRw/meX0mWcIz49z/IiGN3iYH//4DQ4fPsa5Z57d0yO8NDMzI6qF
      NFRTgFprAB0dHU15fsy8oubk2WJrEEKwMD/L8vwIhch54sZBIpEEnX6dlOint6eXI8dP43S6
      yt7rRxfOc+TIYWZm50EYPH7qdAvvYmupqQBlB33yvVn1sXShS5Kk4p7gZtB1nXw+j8vlKv5t
      KcPmMj83TXr8Dwn6ZRRZ4vr9PHLwFZ7/1KvEY1EkSeDzB1f9Lp1KkcvnSCQSBIOhlqcu2Uqq
      KsBamGnPc7kcqqoWi2xvhJ0W/rvbyWazjH70J+zzh5nPHEG2B3F4erC7e9i/f6jVzdsxNL1t
      y+l0FusCG4axaUWpLcHfXGyqilBCLBrDnHq+PE34jWsXCXX2tcUkdy2aGgEqi2Jb7CymHoyw
      FEmA0Dnx2EoMkfWu6tNw5ipJkqoWxbZoLdFohHt3LjE1NcnszENUWdC7b4jLH3+05WVq9wIN
      m0CqqlqZ3nYYhmFw7/J3CToWuXTVx7HTr3Hy5CkA+qoUyrBYTcMSbe322hkIIYp5WoUQpHIO
      bo6lcbi7OXBg963Etpqm9wNYtA4hBKNX3yATvojU/WtkkosUtAxdB17h2Rc+Z6WiWQcNPTFF
      UZBl2fLVtxAhBOOjF5iZvM/A4S8Rj04TCg3w3Iuft+ZlG6CmAiiKghCimOJ8J48A+XyeBw/G
      CYU66eysvVFjt2EYBtFolFAoRDIZZ2niJxw78w0Ghk60uml7hpoKYBYvMIfVndzLTE9NEL77
      fxjPSAw/8XWOHjve6iZtmHw+z3vvvkVvTzfBYJDbt29z5JlvEQrtHQXfCUizs7NVu/ZGSp3u
      JOLxOG63e9fbwYlEnPG7Vxk6dArDMPD5fNhs1iajraKqAkiSVFz02m3cufUxwjA4eepcq5tS
      RAjB4uICPT3l1c0LhQKSJBXnVTMz08XMei6XuxVNbTvkaqbNbk5zPrD/CPsGV1clbCUTE+Nc
      +vkfsLg4X/xMCMHF82+yMDdV/Ky/fwC322MJ/zYiLSwsiGqbU7q7u9vC45NMJhi/P8L+A4dx
      Op3Y7Y9KOy0thRueVJv1ca9d/gWnzryIzWbj8uWPWZidoJCLcGD4GHPzS2RSEQJdBzl16jRd
      Xd1beGcWjaBW6+ldLldbrPoahsGF829z+uxz+Hx+pqYmcbmc9PT0YRgGD+5dpKPjtbLaZ/F4
      DJ/Pz4fv/jXuwCAnH3+a8+//DEmkSaY1Eikdm/M2jz12iieffArpqaeLo+nejarfvUjhcFiU
      xozY7fayao/thKZpJBJxstkM/f2rIyWFEDx8MMGBg8NcuXyRbDqGJDvo8NuZfHCbnn1HOXby
      KSstzC6iTAHcbnfbB7wJIRi7f5eHDyZ4+bOfKzMDo9EoTocDp6t6RjSL3YeUTCZFKpUq1vlt
      Z+EvpdIRIIRgfHyM4eFD1jPaQ0jZbFYYhmHV9bJoS1QhRHFfroVFu1F1HcDCol1oP1ePhUUJ
      lgJYtDWWAli0NZYCWLQ1lgJYtDWWAli0NZYCWLQ1lgJYtDWWAli0NZYCWLQ1lgJYtDWWAli0
      NZYCWLQ1lgJYtDWWAli0NZYCWLQ1lgJYtDWWAli0NZYCWLQ1lgJYtDWWAli0NZYCWLQ1lgJY
      tDWWAli0NZYCWLQ1lgJYtDWWAli0NZYCWLQ1lgJYtDWWAli0NZYCWLQ1lgJYtDWWAli0NZYC
      WLQ1lgJYtDWWAli0NZYCWLQ1lgJYtDWWAli0NZYCWLQ1lgJYtDWWAli0NZYCWLQ1/x9rVyNG
      P32GJwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Damage per Region' width='192'>
      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
      smPxpTnmpkdKn5cWF9l/4BCnzz2H3+93hH8PIklSqRewbp5n/j4QCOD3+1eP1cMgeHXfrAyh
      UHjLZeVyWQKBILDaCy0szPPx+/+FpvYj9B06Q3tHFx6Pl3RqhWAoRDS6d5NGOdij6zqpVIpw
      OFwxI3ahUGBlZaX2CiCE4Le/fo/29k6aWjrQVIX2jk68Xh8zU+PkMkscOnphzXWzszM0N7fg
      9XqZn58ll0kQDLdy5dKvOHr8Ah2dXXzxxXVckkrvgSME/H7mZ8cpqtC9b3/Dr6t90jFvllHp
      ++Xl5fpQgHh8iZaW1tLfxgbNmqahqSpeU/3Gx0bZf6CPL67+int3rtO5/wxqfpHEwhhZNcCx
      k8/w3HMvOCaMw7oUi8XaK4AVIQRXPr+ILxDgzJnza75fXFygra2dTCaNrgvC4TDJlRUWFuY4
      fOSoI/gOGyaXy9WfAhiMj49RKOQZGHgUZpBIJMjlsuzb11PDmjk8KZRWhNWjAtiRy+VKgU4O
      DtvBnooFcoTfYbswQqX3xiyVg8M2o2ka8XjcUQCHxsTlchGJRBwFcGhMjLUCjgI4NDSOAjg0
      LM4OMQ4Nj6MADg2NowAODY2jAA4NjaMADg2NowAODY2jAA4NjaMADg2NowAODY2jAA4NjaMA
      Dg2NowAODY2jAA4NjaMADg2NowAODY2jAA4NjaMADg2NowAODY2jAA4NjaMADg2NowAODY2j
      AA4NjaMADg2NowAODY2jAA4NjaMADg2NowAODY2jAA4NjaMADg2NowAODY2jAA4NjaMADg2N
      owAODY2jAA4NjaMADg2NowAODY2jAA4NjaMADg2NowAODY2jAA4NjaMADg2NowAODY2jAA4N
      jaMADg2NowAODc3/DxabJmfvWR8rAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Distribution of Damage and Casualties Per Month Boxplot' width='192'>
      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
      1fr8fwOWK5YqCTSOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dual Combination Plot of Indicators That Influence Population Change Most' width='192'>
      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
      rUbi/wOAxnMAi4Cf4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dual Combination Plot of Net Migration vs Casualties' width='192'>
      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
      rMSsfs5A5AsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dynamic Graph Casualty Prediction' width='192'>
      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
      7f8Didvyf7aGHTEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Figure 21 - Correlation Matrix' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gulf Coast Damage' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO192Zclt3nfD6iqu3T3LJwZcihSJEWa4iJSkiVFNhPJduxIcU70kjzYf6qV
      t8QPPsc5yZEta+MSkeI6Q4pLz0z33aoKyEMVUCgU1lpu3ybnx9Oc7ioUgEJ934dvA0A45xwP
      8RBfUaQA8JAHHuKrilT88tGdj+RFznn1wzgq1uAACAghnQrEpTRJtesEnHN8/vnnuHXrlrzO
      GAPjDIyxVnlKKDgAqrRRstLYaUKI/BHMyzmX1+pOQ/SeElq1zRk450hoIp/R+6u342pbhXhW
      fzdSjxuhBGVZtvpjA6Xu+yEQ39B6vx4b2T/Du44FUTelFJ988kmLHkJhepcx+py6bnIC+THV
      phJKUTKGhFIrIYgO7na7FnERQkBBwev/qmcAmtAWMQtiNb0k59WzFFQhPI60JhxCCBhviLBk
      DADvMIvsLyHg4j0NBC76L66ZyohxSkgiGZBxVr0l50BZlUlo4vxwYxEj46z90XTwiiCJRbCN
      BfV9BD2MxeCiziFoMUBLigKgALg2ihxVmTSpPiSlbcK1dbCS/LxhGgJJKIS0id71cvIeGiLX
      B7nuqERVf3OvZCUSmsjnOWPgHLJvpnZdH02XTnJMuPKS1SQKENKd/ZS6xfuPwQg+1VYXVmPD
      9g42wRZb9xiQDEAJBQOHkJSi84xV19SGBROoRGcabPExG8JmYLxSlxIkKItSzgKqumN7OROD
      KQ9pfxIjM9mIgpDuM3pfbO+p90n8myiEXTIGcII8z0EIWjOBiSCGEgklFJzw5tMpvCjqZ4yD
      ak0M7UdHEGk4NHuzNQNQQsA0CVtJT6HD2fVFnRlaL8qrKTmhiZSOCU1AM4qSlWCMDRoYzrm0
      HXQm0euVRAoOAiLVBOLUF7pqk4vpTSCoJH1Kk+B3ZYx5CcoGQkjr/QBIdUwIJUqoVzC4ZmN9
      DEJnralnnhh0bABJwFBf3NxhxjkSTUKq/0r9vJ7yS0HoigqVKAShfnAfdL1cJXa1Hl0qqx+J
      o5GQTnvDQPB6eR9RE0JaTGqStLRWwdR3GZNYVOIfQ0KbxsT0bjZhcdHEDxhsgJKX4ByV0lxd
      lESrdpeASIni8pYAAKEEYKSW9ECSJFIC6c+EGjcmdUh6rwySXyUsnXCFWueDzqA+T4vevoBu
      N9kYWcVYRh8A6QXzIUSdcamFJuEzBFPMHJIBGo9Fu0FStVaX4UB9TRIU4U71oTFKG3OaMVZ5
      IdKKARKaVMRFCUpWGgm1sUlYS61VoRqXNkIXv6vXxb+MVZ4TSmiLSF22gV6nz05QobZd1sxl
      EgJjEFBoHX2MbxOj+JgjBq6ZdygkA1SdBVR3oamZGIkp6lX+qGeUalZQXyZJEukmbAxn0V5T
      FxEuHdiJsNOudk21OdQ6VK+S+r622cTofVKeUyE8PSaVqnqnJn4g+qHGVmzqRSiEUut7OqZ+
      k31FFVe0Xu8Qz5ZJaJnaiYXRBhA0RlW1AYpDQZXMAcZjU7b2BpLK6yPcokLalqwEIZXzVUzT
      RVl06mn62Q6EhcD0Edp9rP6zSXSTlLOVsX000z0TA5pmsb5MUAUazXaFa3YQHjw/arphvGVc
      m+qMjQOYvnUfJjC9Z6rebCqtSJWpH0k2pkjNiCBKI72rv8XAMs5B6rYppXIWEGVaxCWerVUo
      AEjSKvBECAVBpaY1WpeZ6CihADEPJKW0sk9AO4Qt6uhDgCZjsWm4eTeCaoySJOkw0tBZQH8f
      Pf7AeDOuzfWOh9lSd1OPd5oJgIlYW7N1PVvGjIdJtZQMkNAEaS2FijpkL96e1AYw47xtuJJK
      Z1c5XodNmolnSF2HUEtUSSiMTsEQUhdnlbFOQCQxA/UHreMJDdFU7tt2pyBVrbJTvlHxRFvU
      EPE2Dazoc1EUyLLMWr5DiIQ276OpSqa2BqlCllmJw0xMoc2MoeurdcVIeN942GbnFgMIYqSg
      SCiv8lY0vY3W01x1jdYM4vYoVOpTRajCc6S2yXnjilQ/PmNtdUDth5COhBAkibAZ2upIMyDN
      7EFo1W9qGCwhVVQdlnPe8nQZVQTFeBUoyxJp6swyMage4VKsLMvWDNEHUuJrfRqKMWZH/Z7J
      ISLU5lBmsbVh/EoERBqlAlLyK9IzlOdN/m1TRzlv9EdCifTImAyqLMuUGYSBKoNSuXI1m4GS
      lmql5hGJthuiJK0pPfxNK8zn8841k52gvldi0YtVoQBUDJfnObIsc84yNkjCqWMgRptGYcY+
      zg6hSrk0A33sS1ZC5idZaCNWyoeUNTOAGITKHm3PApqV75v69A9oMoAq24CAcwZe0T2SpDuz
      qG3tdjvM5/OaaRRiIuY+6QNesMLaZ0JIo5ao6pBlJvCNhepS1fuke5JsH1Idfznr9YgUS6nJ
      9GAnjMZr5XaOd+sSQqyTmihXlmVtZzblVWEZQ8imayHOCCsDAFVmo6kRn49chZ74ZW2LUlQc
      Z0eLc9O0RZSq9FKjy+pHEOVUV2tTb2OJEqW8uG+ahkP1XtMYhOjyunQWEMLBNZvaYBNEJk+L
      yvy+dkyqi3BwCAi6KcoSXKpfpGUP+rQEvc+mPsTYI1ZF1cQ9+kwQksMTSiixuqNoX++r9OQE
      MJ6Y6puB16RYnUuj5szbpH8MdIGhezRMH9I1g+jM5GMq2/cwEZ+LUV1qR2XbdeeOqj4mZ1lf
      f12wCQjXNR3WXCD1b9NUHJrApkuWIXCpEmrfdJtDJyjJKKTRhylNqjlAtx1AauPZL236vKPO
      qGK8QsZXl+IhaoPpW5iuNXVVM6OJ2EU/9evieVudaiZs1xmwXxBeAa+//jqKogj+iKHl/vD/
      fo/HdlvlQdGyp2OOO9VA2uoyPdkUJGqxWvMpCEWZpbKY0EsBh9tQ/M4VQ1GVeLyJvHKlC4So
      QqX2vNX6b0dYtOpu/66+G+eyACBWcHC1bE1gTedAlNEg9f9a1+TMV93c3LqFRx57tL7XFYgq
      89logxCC09NTXLt2LcpmGWoL2EAIaWaAGzdudF7ANN2rktWnZgDA53fu4pn1epQZQMCm63E0
      XiTGuVmiGz4eAGC3M7Yh6tU9I8KlW/1rZ1iOJqKu90OXqrFjxDmPjqp2e6f/au7TneUSt2/f
      BhAWybXR0O3bt42q5BjoMxs7jWBbI7oB7MQEs5okcJ1hoUhQztGYWf3aUOttoaZ4QfzgHDDp
      yBrjjIkQ4TMUjSNBcRAEEu5YHpwYRgn1TKropEKYvAOmTsYYUmOhNd0q7ekGG+MMJID0+npR
      WrMIYI+iOlJFpOEL3jIGQz+eyU08Fbii2o3xTUPe0aVGmcr21TBaDGCqXPe0hHSydX9E1UeF
      jTEF8YsyY6peJn1XtmMobwo2qX0F0Eq8G9KffTw7hPh9HpuQZ2zfc8g37qRCqG4vk54aj/6D
      ptoZtgih6KPwEAni5zIB2NCjnozhso1gcBfKvij3bHp/zGxkat/1Pj63qA0u+ykWQ4h0TCGm
      o8UAamMmF5bKGOIZ78BHjJlJUuptMsZkzo4kepO+KJ0g7TpC+24r0zWI0cxyhneVhF/PBqoB
      beJPn9fDphuHEnIfnTp0FjdJbL39GJhoULQzFlO0VCBfB8Q1l2+/Y+FHdFT/+ELq6x9Nj4Sa
      IPoniQ/jfBRdZTG6AQ3ErT7HMWyGdY29jr4zncuzFVPPENi+1ZgzgtcGMMFnCI8J33Tvk5aq
      WjSkfV1F6by7yqiqzx5mI01l7A5jkrbnSWUW1wxmUqP6qy2CCcz2jfGJke2tPnZDLHo5kaOs
      7sgP4DWsYW/bRmjiOdP1oDZ5E1HWI7SyTY0pXfV3VD3w9sqrDm8RZMdrozAYS+p36tX9aHsQ
      dirEWA/dMseHXjOACx29vecUbJP0BKTa8MnUrtCvlSm86Ue77BQQ0luHSXq37qPNpKZy+fnS
      3uaeMKZRPBVi7QPj1ohjwDQ9h+u4QDLLUWzbcTo5xRuoTBC5ZD5jvXZ3pK2cOqv4BpeDg/C2
      +pEtShTbNMxeQcPkNmbx9XUsqB5BzqsMzl2eV1Ft4Qgg5m8R1U7V2GDaC1ENTegwgKnSPh1R
      CaefIRbvutONUHVQTLp7Wypz0KxEsU1adcV1Gp0ZwPUeaj9MUePYPozpHVHrPD09xfz1N/Dx
      629YyzUWwwQQ0UbXfRu48VeJTirEWEwwjPiBchcf6ZQEXRNiTN85KmKVKpxY+KPVH1qXeE5/
      D9VDZIoZDMWYagkhVcpJlmW4cXICwD8GJtV1TM3C1qaO0G9lNIJ1KR5LxKEuuqF16vdDFm9Y
      DUcG5FvN6It8d5ffnPPurgut2chh3E8J21EFUhAof9vKdK5pHrBDhtULZFJlQmHzk/eFyohO
      XbpnWkFjYCttSjHd7Yv6nGQopZzN1tClvMqspvWzfcY+BoQQpIu1s4yTmKXK2S47piLksoVM
      3rbY8eowgGr8xMImEUy/x9QXo07FRjrVQTQOMtpELssQtxsyhGltbs1QY30oOOfIVxbvEtCy
      S9S+yR8I5hV/+4k0BqGuZHFPbH/jG6/suGF6yQCEkEG55ZWnoKgWOo+Yqssra7bSqx2DGRv8
      UT+kUWUD6RCknt3J1bqUvJ/GGLd/DF88Q++nC1PMFAQiCOb2XhFCkC63oEmk5E0Z0sUuoFwZ
      VA4AksUqqJzqUu54gWIHXzwnU5AtPm61rIvwdLhSijtle3pNuOGaDlVdcY1La8MAmN2/UxiF
      avxFhc9A9AkUk2dKH59iPa/vhfeXFRSsmFnbFu/DigQ8d6foA+7ZzIUWA8ROV3KKR71BFLrT
      kk2CjK3O9IFJRdEJXF/zalvkYrJ1jB8KjoBYAPEaofnjXY6AvjOF/n7q333tPJWZbOpOCLMO
      gXv7Mg+kZ6OGmAVEUMemUo0pAV16Ymw9qq2hfhjOKzWMANLHaXuHlhfE1J1AF22I2uN7fmgb
      aj0m205vI4bhbMTfB6HahAmDGIBSCsKJtr8OWgfQTSvDu6qJft33nAk2SdwyxjWpq9fZSm/g
      8BJKrA3TeQdLf0zvsk/XpOmb6H3oqw2M8R6Dz6skpN7mQhiN9UdwbYsHHI5/uPf0DftzMh+J
      N0Evl0Ecq3aKZzqEBPPvQ9tzGesx49bHI2RzdY5FP8MPbEUjacQ+O0D4IA9xk/nqHfKM042p
      MI1uI7TarVwp0mUY2n662IIm3cMDTSqaqFjN3hSCyDUGY455iMvX1L7+E9LO2HAflN2DmKdY
      rB0ipWOne5tRp5fp1FHHvCSx1rtAG+0HB9mLek3t5utZOCEpwb8xDqDeF0Lfb2pNwWsDmAgk
      Ro8c0n2XV8TnqtSfiRlIW90qoVkN4AChEaPzhrwLIWR6Y+sSwudhIoT0M4Kj9D7b9YgpT2e4
      GIN3KOGrbc6OCrAiQbGLj27HqAahZfQZZCyvSiwIAWIEteh3yJhM+U6cc7cNYHJ1DYVaX6h0
      Nrng9Dr1+7GGkk/qA0C5nYMVzWHfIf0OKTf2GHfHB5POEMk8PBIsCTrxR3gr+oM8UNE1loQQ
      ZMf+SDAhBLOTtRxz5wxwyDqliQn66ouuZ/VZyNsOAcTCnJB2QzBUD07mO7A8RVlM43AoNu0D
      QUL664oEq8/ThIGkJYqN+zAQzjmK1TFMSrc+U6rlBsUBhuJQXKFARYw0ISgL+0ZggDlKSYh7
      N+dOHMESTfa1FwP1uXxtJx6TmrlvFUrvj0qwZUGBIkwQ91FHB4t4n96s/h6q9/fxL8e0oT9L
      CEGSAsdffwe0Pnsrpn2RAGjb6lxX+VwxhDHQZ2ax/b5PcN5eS8AYQ1l2j7uKgY8mRpkBQnTc
      fQ5qn/bKAjh//zlw9bR52PftVO0jk5GuouNGjWBSU2xCvxfjph4bY8wanZmRmCP8JptxaKzj
      QlUgE/oMZOiAuNoUz+mHcNjckCrxq25RmRaiSDI1LUJXfUJOlFRjDKa+297J5jxQCWosweSz
      yXxuYZX4Rfl9qGJ7YQDThxDbG9qkZd+Xd3mMYiSli7D031vX1F0h9FRig97vShicEqH2Suhz
      vnK2oJ8sx+H0VJniUGMwyGAG6OODD3Uhqhg6M4wFoxpEgSStdpTwSVV9FjCVD2G+qTBWTMX3
      vK7a2YTO1GMxuZ/TNm3bDnruRH+p4aR3C0IjxWOCc165PZmW12JpSk1dCPE0ucqZyk6Fsdup
      /Pto7ZN6ERg8A/TRI0MDYACQzkpwRlDm/hwjl648JRjjILzdP/0o2SH9yo5XyM+PonRqFy7a
      /Zwudlg+/VuQpMDmwxexvX8FwMW4X0dJh45xu8W6OYttGkT8av2qJNZ/9gG9TY6u4RyD/Pyo
      Uy9gHs+LIG4RWQ0uf/MOkuUD0Nkas0ffqw4JtCB0TTAhYZFgoL0ofhQj2CXhhpJcH6k3loEU
      C6PaVS+IEbq/OmP6VKHYd7goya7PTi4QQsDWVyCKs9VVed0EXqYoyxRWnVKUc0SCu/21LIrv
      C7c/etwcF6eP3VA21qtkKj/EMyV3VuCNa5QQIjfJGuLR2Hd8xdS+6XfA/V22X9wEy78HkpTI
      71931h3zfn3GYg+BsMNJdwiBfiSTKfhk8qfr99TrQDfYQ2De5dr0rA0Xrcu74GPO3YOT+jf/
      KfRT4uACYbFwDXSfQRT1McaCiNBXRvRB+PtbTMObOoaqbLES0+cxi3ne1g/ftynLEoQQbyBw
      SgQviFFxUS4roD2wnPsPih7SV1X6i3Zi9Haf/TLFOPoYQW2Tpgw0zZGvzVmZvuf7ltcFzFQ2
      m4uxRXteBlC3PakqJEh7LnvU1Ye+05xOlEOgG6UhDO+2efrhIgz3KiV5jrHU1JhIu/h2Y6Xc
      x9KSKB819xDSXvhu6ryvIzYJ1UcPHJo2oT9n29JxH8TZ1wgW0GebWKM/pq2YezZc1FoT1enA
      uWdFmIAqGRlnKFnZPtNqBPSpa0j7po9GKUWSEsxP8lY5W9Q6pH0TMY4dnzDl3YRC9+TYZrtY
      XGR01waT08I7A4gd3hjngOLGc+6LQ1R/t9n3Hdph03Mu91soTFK9ei+KYr2AruXpcYaQti/S
      TWmbtUzjOJToXTOkbQySrADnBKyoj7z1LBIKGfM+4+1dEyz+7atjjaFfqi5EtT+EkOgoZAim
      llzj59WE5RRNBV8E1sRgi6dex/LJt5qLHHJVnfqjR4Jt2QSUUmTHK+OMps9GIhLMOffvC9QE
      b+J07r4qjc1GEGdQtSKq4Ng+WAAIc1mG9jNUtQmBTSqF2EAx6BM4Ggvl+gQuQWdS0bZ3ngeU
      1PH6fJ+WaxgAWJGAFUmL/vS6xBirKSN62+q14Eiw3pwwgkN93ya4gkW2evTZhFASdBzS1Dg0
      HRcIU8vGhnAe6HW76KBYL9r9siwaCmHoECeFiVa8NgAlpNb928lcsRgi7apZSMxAkIlTjNXn
      V438PfvOCC74gk6xHptDZDwdsWMm7ZGeHzS0PZ1ZnDaAkPj1X0jo+NsemtBhGFTEL/zHlZSw
      79DWtx3A7Ao1pUOMgVCBQhOOdLlt9edQMJYna+y6QuH3AhGChOyH8G3tq5AGEMb1z4t6dP+0
      bZdllw8+pJ0YsJKAbypb56uCKT1o6ky692hEiEdJEokiDQhBfUp5NRuo9Q0FTYDsaGPpcLdv
      Y/nKY6CqoIegAvn6MeaMEFqOtOjFH2cJDoSNBZMv3YZK/VJeQp4/gMZcUrxUQ8BKIF8t/AU9
      IBRIZrm/4CGCwHpm8GWDieBtTHApXlnn4jq8Jv/oE6fQ4aojRBIJJuXs4tTFIaCUIcnCTmOc
      EjGeJLVMXxrYax7qGN4OQggSx949Y4MQgtPTUyyXS6RpCs45kiSR27rkeY6yLJHnOY6OqpVR
      ohznVcqvKD+bhWdd7huspGBl078x1JvQ2ASpp3XO9mfgCxtj+hlgovcRUll4gqZkgsVigdVq
      hfV6jaIosF6vcX5+jjyv1B3Oq7Ts9XqNsizlv9vttsUkh6C794Xe9/To3PsMTUski633+6Qn
      Z5g98kdru+JndryFzxHJOUd2tPGWy47WoAnpnhN80R9pal+3jCtEtDGfz5GmKSilKMsSWZZh
      sVjInR+yLJN1l2WJ+bzaLTlNU+R5jizLRlHTQjB2hqx6Tb3ni/4CVRQXRUOJtj4VZ1cAXPHW
      19hp7nK7c3+K9+58AUBJhajy/gmSkQnPVF2I+hLKjDHpvIL4wTm4iKw5+qESk1i1pLpJO7YJ
      552VX4IZpoYp3aAvE4iNfm1ZsKb2hmCfao/epjYDMJQll6rFGLC9G+ccYi99vXOmv8UzUq90
      VW6op+Mx4n7/0T62MR+C7HiFYnU8edv7fDef3dC3Lyb6aiXDcVYRZJVjAxBNgoylmqj1SCZw
      dFR/LiqOoD4rmE3cImFhd1t/QnJPplYnpyB+0W91ne5FqMU+RnDN2CbYEi0bBqgz8YTkL1kJ
      Sqp1AKq+HDsYruKxxquQ4ibCVSOHOrPKFyfK9ttKarVxMEfITx+S9xOCQ0qJGAIXsZu+q/g9
      dixN9VvdoJRQlKysH6w7SQhIpPvR9o18L612Wv3bRpSm+kzPygHlNROQLjHHJP6pZW0MODWm
      YDSbxJwSrtlWTXseE5IBKKHgQL1an4KQLjGJoJOYEUKS0fTbsVNXCPR+hNTXKk8AEVnGiC5V
      k5QaWzWakjhjIvc6Ymd23zMm4h9D0EgGEGkGIjSgc1wjDRhQX2clQ5qkvTsgvTKG6z6CtuXG
      mGq0qUTtQkDs6S16XaESah/2wUW7tGPadxGyPp4hYxwzU3RUoNYH5aSlIoCj2RWiLibcZSrU
      bf9MOpBUFZQVQDFwJYbpR+xUak6jOJk+DKlePL4jFlx0LEVgDCboHU+gtWPFUQ9NC9D5GuX6
      BJyFtzOmKuT0dVJKQQlFQpPq36Q6I5fQhvDkLhG177hkDPkuBwdHyViLvjmvNkTiaFQqE0y5
      HSqx24hf3Gs8PWITQnu94iC2y4axAmvpcguaur0nnWc8uzUnKcfRM79xRmNJwnD03L/g6Nlf
      YPH427ItU3s05Uhm9m8knklSjtRRDqhjOosmYTFoPUCnQ4QCpFqVVcUOyhZX0qQ5SFoQe0va
      B7oxOy5ThO0nQ0BAlEM1XMQi7IfseIXd2dJYJgQmQ/oyoNxU0VXxmUP6zcp2dFcXVKwk2Lz/
      rfrQEHMdhDKQdFupnbO1uVANzgjU9cPGMpyDcwIwP32oCYu9k+Gq7VKAsmzr1lL1YML3Pl4K
      gCr1fYESn3tStzGqBdX9+ulz3/n6MyV8alAfQ5Ip5zXYDFNWugmR5Sm2H34Lycnn2H36dae/
      nzMubVOXbcgZqdcKhvTfEAmOgZCqOlFWXiICBgYakWtnImw9rcBUXu9Po/vDme8TYmgPgdqX
      i7YJQmwB1/tP1f/dvRvAvRteQeFzjw5BywsExBNCx9dOiNxPlGl1uTos9biEIj3aYHc2t3pt
      bF4h1fAluomhGMYhO1uEwtaX1u8kLOrsq1cfZ1u5Q8BFe6FC0ZoBzG5Pj2RgXR27qcc8PdrA
      OUdZMvA6U09/Tg82hQ5w5Y0yRIaV2QJwzxjB7Sh9lv0eaesK8xhffsQEHPVrtrKh7UgdRXho
      YjrlarB6vp9P3bVJrenfTj3KHjNq3SbPUaWywWuY+2D0YQ9YDOGLRPeZqS87dLXSpgb7nlfL
      WG2AMdxsqkcy/llD5C8iOxMIlLyKy9QFl55qkvxjGv6HQLyH0g9gXPVKzgB6asNYL9u3FlXK
      iz0jfXGzDiGK5y07WZM6TiBmgTF1VlNd6WIHmh7m1iYq45qY2BST0X9iQQhAk7DxcBnCQ9Bk
      g5oCEJRGSzO97FCS6nB7TdjCsBTZqmrbsg9cRIHdIXY9yOYzQH0Qdeg7aOfrTLTu9BBNLW07
      32iAh8gGX53p8QMsnngTJNugPH8Emw9fACvCnZI+NTgUnSWROrwfgzRE6jPSYlQYxpnM3tT7
      05qlOAcnkDvYxQ6IybMSC9P76/fFjKQzq0mC7pP4fe3Z1A2TStgaS8qt6Q2Eciye/B3ovAqA
      pVf/iHm+wPqj58ydIAAhHLx0xy2E2ck9k0orsOoqGCL9KaGtU2P0znH1FMCI79pilNYE4D8U
      Wm+/w4gGCagzQiwzuOoU6RkEjWHcV20Ygr6MpatEYkG8+h30MvPH3wGxqDckKUCybesanZ9Z
      26e0BE3b+y2ZaJMmDElWeN8nPVrLNI1WHMBHKCZUuT0uQhwoYYUPnbT7U0nU7ozSmYlgl666
      3aN6n4ZIYXW3ZFF3lW7eNWL2xQiibdFe6PvpZTnnQQdjb2zSHAAvMrDNCZKj+3WdQHn+iLU8
      KxOgbKK3tn6WBQUKf/A1P282QbPGAWLgMpyHflpBwCbiNKpTxHqnXWwiwjPFRPR2eVWwKh+w
      wm1Qf6A6usKFkU8tsv0d5tMH1u+/jMXj74DOVijObmFrSYfQYz99+utChwGGVDYGQmYiqUYo
      u8M1yrXgAbPequu0Lm9HLITHqelnE1xrz0pN/2wEo+q6g76HsD2EYR4TPDT8buun6ZrrObZb
      YPXey/qT1rpCxqDPWDnXA9i8BWPPEq6PbZ5V3AEQ10B0jOiesHqLQBqVkDfKIedcGAGdrVVi
      JZvYla5Pn/vOerFR2H5u0fCz5Gy0EssERr+TzyOhNiLSjnUpatIdfXW67utl2je6932eiyHw
      fVzJYMrC+yo/yW2vhCLmQ5s8NH3a0q/1fdYHn/CK7YMPTserLimNMwKvxRragx2qVtj84Cpc
      UkEEs3zYO/Hztm7vi0XEQKzAE+NMk2qH60PBFLZVKPEPVoFMDYuBtqlEpvIh9YaiRVQGptyX
      O3GoBDIaxANck6KOZL4BW02zA51pfEPU5JAyNoSoy2MhWJE0EXaoP96mjvg42TWL9NLlR+AT
      X79lUyQsVWAo83LOkQcQ/1B7x3UvVs0SY0jTAtnVL6zxAtNzYyPKknJ9SBeBuurxvZTuufHZ
      D+7Kwoq5+uLCWAbmvp4NgW+8deIX3zaZb0GoW/VdPPVbLJ/5NyyffMNaBqgO1fKTNaIAABb+
      SURBVJ7f+MTk2NPKI+iQD5pwWVe0K8Ek0QipDtBTt0gxeWb0H9e+QjEeixhjcB+IkVShM8pF
      Qh+79OjcKpDE37ObH4J6DtwgpH6WtGcAvU46K5Be+dw7g5PASDCd5ZIBei2JVAekOra0ItY8
      zysDTbjnOZcBH/05FSJKuU99PgYxqlZomcH+/Yj2htavfxPf+mnOuT2vRy3z/stIj++hOHtE
      XtPLVO0tUKxe8r4rKyhYQCS4WDcHgQw+IUbuJVqWMhAUs+Sw8iQ1LkMVNp+yel010EOMq2qa
      5GBlPz+1qR9fZvg8cK7nbF5Bca3cZSh3t4KdC2PEb3SMdkRSkiTyaCABxpiMeDJeLZI3DpoY
      KPgtf13FijXACKmmQLaOO65IV8lsq9ZEsCvW9Ts1LtrOMBF5lJA0/D0GI7TWA4zhkVBR+ejF
      TbQzQ9VyzQPRfYkdBMYQRfw2W8Uk1QRTHBrxD4FKrGM4AXzua1M7Lldr6Pe3lVU2gQ+qJwpq
      R32h+9CXUdOJD0kFESqg6z11yTWUGfY9BjGu3FCVyacqhfapb1ymSYdGd0cIvXC/wY5VUbpR
      ZEJIJwFOn03GIiodsX5/9W9bEGmsIF6st2nssYmxv1x9GMOLF0ufor6WCsTB5coq10NjSp2q
      3QpUJY46TVhKB5Bm+xJVVZpi6kKboUTymSswpy4fNUk02WeMz6ShGFtImARVn+fH6Fff+FBr
      QYxY2VWWJdQEM6JJ8TGnXkHoKiNIyYJKpZDMoNyv1gOzyVynTUZnW5r3naLl3457fdCnTzrB
      0ZSBpjmKzTjpFH1pY8i37GujdMQ949UKL7nbc1miKAv5d2zghhjcmzpM0lT8qLuqmdQM+fdA
      6aH+VP0m0tWtS6ohzD+2zj5GX1hBW8Qf856EoLULdNAzCQPNcuM99fnZyTpI9cmOV/J39UcF
      TbkxSNZhAHVxebX7c/VT+lYa94SqwujuTiHpbVHh1gtjHImqryEWv5mYxNSf2XHR1FP/58NF
      eoZ0NUYl/pBt46tdnpsDw41ldKJkBLxMrMQqoC69tNXNOUexOvb2kzMCxrr7tRsXxIjzAEpW
      Nh1gDCWANIkLHfg+/1C7YiriqQxvVJFs1dj2vBHL63QQbi9/aAE1W/tJkrTWN5vKspIClp2g
      bWoJ5wS+7c71tlzfOch7yAAYHD3KQdlcHpKtcmbJSpSMtbbziCG6vpvCTuHNEf+qtoyOdg5/
      /Z2Idt/RtTLXBln7NuqO1x1/N5xVXyj6MKlJekfRzkAa0Ns1OTEUca55K2pCSWoFT1UF4jo2
      LFAxJkwDQDTpLpc0yhcWHQxvx2qnGMq11CpSNXRowbIYV2dMnSpcAbBRVFsLbVn1mc5HFBVF
      5xTHdV4QTLrIwRlFuXOcsxMI4wdUf5WD37hc1XsxCC1vdNuhLXwODTGS3ETg4rrNnjM9F1pv
      X7TiAIxzaRWrkktd6O2KExgR2D/9xYpNZinZD113pCnwVzHBhRBf3WQf4q/O0NoFLYwZC32D
      Wi5//RSBOl+fqKmw7ulQYwHROJxshQ4qQ5eDUCBbFq2+xrp7h/ZDdfXGts0KgmK98BccGbH9
      dHlyhjw/BNpB2dXJjkDb2+PSY8fCVFLAhWYdAsCLFISoQTgAF6SK6PpwSB/6BuqmhNofX9TY
      N/MNCa650NJnTNsI+gY/dH8aQuwrwHz+4DHQ8nGreUUEAAfyHW8fmTpC0CsGcgau/7MRjwv7
      sB1cao/NiA2pw1Ret0NjETJubQYgpKXjh1j/4r69TNOJ+XxcHVUEa4IIRHFntvR/dPVE1TbY
      5wzQqEKkYQLEM8E+QROOdO5fhqgiXW5AE38/xSa8NojvIyLBKvRxSDLWOh9YtmGqVFV/hk9N
      zbO7nXuNaCxCCVS3YUxMKxbzjJHuMARV7KDtkeIiGHcA3qGulCfgZVxwNNReqSK87rMUOA/b
      rLfMKZB3tZXgfYEopVEnqpsCD/KklxGRzQhYSaPqtQ3k0Kj0WDDq8kpEemxX4JB+cQYwTqz3
      +8JkYE/xXbwK/Gw2w9WrV3Ht2rXo/Sj3EfL37Twg2jV5t0zl9q32xEC+A8wEchHQbcYQHEK/
      BbwzAKUUaZpivV47Oy7OCRB2hCw7MS3l6zlCfK36NOr1Y18wD+juUDVNogoY79drFmq4huJQ
      gn1ekb7dblEUBTabjVM6qinUKkyls+Vu7y8vvCtMl6KWZDXVOL5Qe0D8brh30cQfA9MY2q7t
      c7ydx6SKf+/fvy+v2/S8OnHZoLd162Z5treXbBN51T+GRopyVuXg6B+ZUtrJhJwSgqCNQcgD
      kJRDIOw/scbj4FUgzjlKVlaDz/1H6sjpjBBwxuTeQDaUxX4/qJrKURGTCHRBuab0ryxx//59
      pKldQ1THxPe7Se1y/T4mhhqmnHMcH/vz7UPrMl27yACe0wYQ0si6B06NkpWtMowxENosVLlI
      dAdX0aYt/RMBu5OTE+N5X1P0UfbO4IqthEs7SS8U8/kcu91ucgIzBe7U6L7Y0t2Ei5wRnDaA
      Vd3xEAJjrFpGOdEqshhwXun99V8Ab2JitrfY7XZIkgRlWbaWgu6lv5brfUXJGLEXn4RO5gVO
      /uRXOH7qbRAKp9DcJ7ETQrzLKiUDMMv0pC8RFNdblYhllPqzqutiTzBJapHjI+8pv5sGZzab
      NR9QThbTpmkA1cyT1LOP6pId0rbLqExSPzEmKUe62DrLpEcPkBx/gfT6XdDELiwIIciWfoas
      orbDGdcWJFPHtbUgRt3XM03SSoJr76IahwKs9qoQtPVeUlXbG0mSgBMiE/RCIJtzeFA6ZQ2g
      WYbT+/fx2K1bnSDeFMygpp2oRD8l49EsByvnTqlcFgRl0eykZ5oN8vvXkXzyDbDdEmVBYdN2
      OOdguTvNnRACViRA4T4WNckYSFJ60+Zd3qcWA8hdEJTxpoQaqcc0CDKjvtNgfw6glOJfV+e4
      9a1XnPW10hxg7ldIT/RXZZzj9dffQFIW+PpsjmWaVjtgpwTpyT2wzTGK7Wjbq7YOv9uH5ydf
      zxDzfWy+e1YSrO48FVRHqAOkb2pDDDjnbSNYlUIm2K+3mWLIR9Sl7PLKFTz/rZeDddmxCIdz
      XhluL74ImiR445e/xI13/oDjNMXyid8je+QDsHyB87f+3aherUNyEe4bevbnPsaizQAeaeDq
      kNCtKWkySn1RV1P9VeIXWoKJMYaiiMs4HKo7izZFivSL3/0ufnn3Ll7mAEk3lVcmyUEoAzB8
      2eZDXAw6K8J8MCcpNanUwoYYlAc0IuOb1iC4TqYREO8gtn3P8xzPvvYaPjg7w+7jF7D79Gls
      3n8FZT6eCgQc/gywzwDmlDAYwbUBwhkSEi/ROOegGuGLlIM+MEVDYwZFlGWMdaZWvU6fq1fs
      j3Pt+nW8c3IMFASbO89OFrY/dCaYCvvKD1Lb6KwI6wOh9hilfuy3dNgfsYOjZ4AOVYuKosCz
      r72Gd1bnBxfS/7Jg37lAnRVhfTogcjw6xKVEm0K3CBSuVBMzDR0YE/GrbkcfcxRFgavXr4M8
      +yzO8hxpmu5FYl0USMJs8uhSQQQzTd+4uyRyRMnWZ0axEWNsn8S76CqZr011Y17ViBc/2+0W
      L37/+zh/+SW8vToHTRJkWYYkSb50zJCkpfeoU9ffhwCf4JQ2QJIk8qOPOQVRQquAlhLkMUXm
      RGdDrvsQIs19desDp+a5rFYrPPX88yiffRZv/Z//C/bgAR5Zr3FruURRFAevGmXLHVieeVfS
      FdvwIFOSAqx0vzehACH+AwpDy4WAEII0TZFkJQjdodi2j8eSDPDgwYOoJY+huH9+jvfPz2WM
      jdcuTs45CG0t8TBid+ORQe3rsQ2TQezLSDQxy3a7RZIkePnfv4YkSfD6r3+N2Ztv4cps5nTZ
      JinfezasDrEV+piMStIChCfgDqIlhIOkJeBZQ0woB6H+cqHgnKPME5jc1YRXwGeffTbJFGZK
      JPvggw/w+OOPt9KNbW1nWYaiKKLiAOoMoEtyoaqYlnfq2Yw689iS4iilmM1m+OU//iNuff4F
      Hl0ukefm/e+z5Q7Fxp1+4MNF7AR3iAhNh3BBMsDHH388uQ5XFAXOzs6w2+3w2GOPTaYquFyc
      rcM3LLBlMppWvKn1LhYLvPvmm1j+5rc4ybJJZlSBfUVKv+yQVGDTeU3StO/P22+/jdPTU1y/
      fn3Sj6e7P0Pvqe9tel/APlMxxrBarfDMCy/g7vVrAODMgR+Kh8Q/DjpiUPWGjC1lXnjhBcxm
      s0kJQ8BF4DZJrqo4gujFtdA1AZvNBi//6Ef4XZ5jlefIsuwgvSMPUcGbTjdmYIJzjsVigU8/
      /XTvRNGnPRND+Mai2h0D+MF//2+49/JLeGu7RfIljxdcZnRsAFXqTzXNbrdbnJ2d4Vadaz82
      bK5W3RjWZyL1pHdVfzetgQjpw2w2Q1kUeP3nP8cLs7nVMH6Ii0MrGc4XNBJq0VBpxhjD3bt3
      8d577w2qxwab7u8rI67rxN6HSUXQjCYJjl96Cduy3Ivq9xBx6KhA6lRv03uHSG1CCD777DM8
      99xzuH37du96hiJGtRvyvkVR4NkXXsA7yyW2ReHcaeIh9o+OFyhUUsZC1C185svlErPZzP/g
      RNC9PT4Vp++sxxhDnuf405/8J3z02KP4Yrud/L3HtNsuO3zfzeoGVR8eYzDv3r2L09NT3L17
      F0dHR4PrGwo1TqB7hnxxgliUZYnNZoNv//jHOH/pRXx6dobZbDZqGyY8ZAIgO145mcB5SJ4a
      BdWvx4JSips3b0Ybk1PARnjiffWEQD0G0Of9GWPY7XZ4/uWX8Yu7d/Hhx5/gxZMTLOdzOUuM
      Bd2R8VX2QO3OlnDl5DsZYMw4gFB/DoEB1MXnKsRMoBr7KgENVS12ux3SNMUPf/IT3LlzBx++
      +y4+f/sdPJ8kuHHlCvI8Hzw+pm/2VWcCF6Qb9O7du8ZEMWAcCfjRRx/h0UcfRZYNP/1xDMZU
      UyKE+iOIT2TGqo6AMdWJpE6hFm2//s//DPbBh/jmlSu91j+rmJ2skZ8fdTcpnogBLntKhpUB
      rA/0fGERa7h58+YoTDAUYr2veB89OixcliEGsqivz7ikaYrZbIY/fvIJPv6f/wtfWyxwlKbh
      Rz/V8JWdigEEw03FBOliB7abYSrFwbs1oula6Aoq/bmTk5NJE8RiIIJdgtBMvv99uEqLosB6
      vcajjz2Gp/72P+MPN2+iYOzSuEt3Z8tJZ4BqJ/HJqnczgOnFVEJxBZNM97Isw+npKVarFdbr
      tbOOfcCVFxTLAEP7sV6vcXxygld+8H38+sF9nO92UV4in7C6rGAlmZQBolWgEAjCsQ3+arXC
      arVCkiS4dq3KnLzoD3Uouux8PgchBP/68/+BVyiN2txW7f9lJvp9YjRHtLqG1pWPDwBHR0e4
      deuWU/L6MPYHPgTiB5qVZlef/xPc32yiZ4GLFiSHhuBA2FD0IaBr167hvffei869mfIDj1X3
      kCDXdrvFk08/jdO1e2vvh/DDFwiL+kquimyS2xmFS1OkaTp5RPQiEON718uVZYnFYoEVmXZR
      zVcBPiM9mvLGlkiz2awTc7hIqTdm4A/wb8OoL0ASz1JKsbp6Fed18MwHmxH8EG5Y06FtiHV9
      usA5R5ZlrQX5Ift2XpZkL58zQJQRwTa1TFmW+MFPf4r3VqvgGfIhwcejxQA2Fca1TsD2cUMZ
      ilKK+/fvy3OILwNhxyLkvfT72+0WaZriif/4V/jo9DQoePhlHLupESRaVClmyjMZMvCbzQbf
      +MY3MJvNvrQMEAo9AW+z2eD2E09g9dyzuOfxCI29bmNsHOrsFLQmWMWQF9E/sPjR99g0lbus
      iO2/Pr6bzQav/Pmf433wS+ssqM78cp8zdlForQcIwVAG0JPLTMEb0yzTtw+X3S9eltV5zfOT
      K4M8Qhc5BmVO6+OYDg9RDDCWNPZ5LC4zwaoIMehVuFzJ52cPeo+9GqB8iDY6u0ObYJLMscyg
      Pys70CPfJbbdi1Shhs5AYmPhdEA9ptn2ISoEpxy6Uhtioa4vWC6X2Gw2LV+36j40PXdZMMbi
      H7GvfTJw2/rLNnb7ghS/ri1PTIQ/FkOcn59juVwa79kY4asEMb7bk5PWNX3cacJBLqeNvDdU
      xnh76WnwkMWmOZieNUl0McU/hBvLq1eR17OBabRIUoKQwxhHQohMczmkVI4yp52dpFtGcJ/d
      z0KMV5ckH7L8z9SHLyPW6zVe/f738fZ2U+01iu4sUO7SUQ6UGANpmuLj8zO8ef8+zrZbzOfz
      FiMcgsNDjJ9xY6xYqERokvK++7FRUrXdrwKEK/TklVfw2fn5XleLZUfb4Ih+mqbIsgybssD2
      xRfx6t//Hb548UX8arPGjnPMZjNkWQbGGGazGdJ6XbQ4Ykr+XtezjzPY5IKYTz75JDgN2eWX
      DyFmtYxYHJOmKa5fv+5sWx+MQ1nEsg8QQnB0dIT//Q//gG9zoMjz1qzKOZen8IjyY4AmALOs
      YqWUynXV290Ob52fA2mC080WP/r7v5NnLAPAW7/6FdZ37qCYL0DzHfLVGouvfQ1n7/4Bx4zj
      BiqP14PVOd5cr/HctWvIGMeTV64A6DoUaMrAS9p7tZhUy1UGUG+MDZsbVGyUm2UZrl696q1H
      dZv2cYteZhwdHeHunTso/+mfcGN51FIfpWAhkIcTTi09syzDv927h/TkGPT6dTz7ne/g6tWr
      2O12WCwWOD8/B9CcoKN+LyG8hA34yd27WG82uFkvlMqyDG//+jdI33oTz1x/pLNvUjrPUeYZ
      eE9Hm6CZVL1gy/cZCyY74M6dO3jmmWeiDGpdhySEHMR+Q1Mjz3M89thj+HVe4NZxW3uVxFX/
      1/fM59Coe5qmeLBe44nX/hxPPfec3GBgs9kgSRKsVitZljGGzWZjbZMQgus3buARQqS6BwCv
      /tkP8YvdFuXpPWRZ1mIC3wF+Pgg672yNOLVRqRKwaQmfr309jcLFrCLP/suCsiyRZhmyl17E
      Z+tVZ49RQgjkfwO/YaVS1dtGKnlbcrwJwUdHSzz5jW9gtVphs9kgr9Wy2JMyxTNiYzCVmZ57
      9VX8Jk3xwb3T0W0CQoh9d+ixYSJ0Sqk1BuCCTZ1SmVgQ/pdNPdput3j5e99D8corePfBg9YJ
      NFIwoN83FEQPNMzEOQeUeoFK+r97eopbr7462bGwYla/cuUKnv7Ot/Evn32Gu2dnozLAaF6g
      UOjeoKIoOn7ioVLdlmj3ZYDYNW673eLr3/wmbv7NX+ON2oGgHj0lCNckHLxjwtvlW3o7mtVr
      Z1ev4KlnnhnsxnaBEFKpfbdv44c/+xnOy7K1hHaMzOQL1Q+Ebhj6Iib1yDYYLtfpZXWfin4z
      xrDdbnHj5k08/1/+Fm9eOcHvGMOqJhBRVhBxzPaOunqqI8syvHP/Hl74i7/Abreb3Gki1KMn
      nnwS9JVv4VfbjWT4+Xw+eKv5vTOAGNjNZoNPP/0UTzzxRPCHES43AZ9+/2Vzk6oRdUIIttst
      ZvM5vvuXf4k//dl/xe8Zk/50UU4t72N8vYyqDqll7iUprl67Nqn0VyHyoV769rfxrZ/+FG+e
      HON35+fSXugD8a57YwBdNRHRQV8Gqn5N+J6TJMGVK1dkDpO+qFyU7xN4O2R0IsBlifV6jTzP
      8c0f/Qd8cO+e8+wB27sLY5cpxm/Lk0QahsiWi0l3+jZ9t7IssdvtkM1mePXHP8bTf/PXeP/B
      g8Gz+WAGCNYtYTZSQ6WTeF48o+aa6LNCiKS7zNB1e3G+wM3bt5H92Q/xy/UKvBYUKg2b3NCC
      2CuCR/1jCDqCYJbN8Mfzc2TXH5nU7WxLmwEqRthut7hx4wbWTz6BP67XnZ1FTMiWO5hkwv8H
      5y8b1nckwN8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Midwest Casualties' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Weather Events in the US per Year' width='192'>
      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
      lQUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pie Chart of Count of Deaths and Injuries per Event' width='192'>
      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
      dwwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Property and Crop Damage for Each Event Type' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot Events vs Migration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatterplot of HHI and Wage Quotient vs Total Damage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatterplot of Unemployment and Poverty vs Total Casualties' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Casualties and Total Damage ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Weather Event Damage by Type' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tree Map of Uninsured Rate per State' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
